(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    207266,       4345]
NotebookOptionsPosition[    205190,       4273]
NotebookOutlinePosition[    205546,       4289]
CellTagsIndexPosition[    205503,       4286]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Approximation", " ", "de", " ", "la", " ", "probabilit\[EAcute]", " ", 
    "de", " ", "ruine", " ", "ultime"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Developpement", " ", "de", " ", "densit\[EAcute]", " ", "de", " ", 
    "probabilit\[EAcute]", " ", "bivari\[EAcute]e"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "La", " ", "mesure", " ", "de", " ", "r\[EAcute]f\[EAcute]rence", " ", 
    "choisi", " ", "est", " ", "la", " ", "loi", " ", "Gamma", " ", "de", " ",
     "param\[EGrave]tre", " ", "\[Xi]", " ", "et", " ", "\[Nu]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"muGamma", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "m", ",", "r"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "m"}], ")"}], "^", 
         RowBox[{"(", "r", ")"}]}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "x"}], "/", "m"}], "]"}], "*", 
        RowBox[{
         RowBox[{"x", "^", 
          RowBox[{"(", 
           RowBox[{"r", "-", "1"}], ")"}]}], "/", 
         RowBox[{"Gamma", "[", "r", "]"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Polyn\[OHat]me", " ", "mu", " ", "orthogonaux", " ", "associ\[EAcute]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QnGamma", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "x", ",", "m", ",", "r"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "n"}], "*", 
        RowBox[{
         RowBox[{"LaguerreL", "[", 
          RowBox[{"n", ",", 
           RowBox[{"r", "-", "1"}], ",", 
           RowBox[{"x", "/", "m"}]}], "]"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Binomial", "[", 
           RowBox[{
            RowBox[{"n", "+", "r", "-", "1"}], ",", "n"}], "]"}], "]"}]}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Loi", " ", "binomial", " ", "negative", " ", "de", " ", 
     "param\[EGrave]tre", " ", "a", " ", "et", " ", "p"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FoncGenPoisson", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "\[Lambda]"}], "}"}], ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[Lambda]", 
          RowBox[{"(", 
           RowBox[{"s", "-", "1"}], ")"}]}], "]"}], "-", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "\[Lambda]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Distribution", " ", "Gamma"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LaplaceUnif", "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s", ",", "\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"s", "*", "\[Beta]"}], "]"}], "-", 
            RowBox[{"Exp", "[", 
             RowBox[{"s", "*", "\[Alpha]"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", "\[Alpha]"}], ")"}]}], "/", "s"}]}], 
       "]"}]}], ";"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LaplaceCompoundPoissonUnif", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]"}], 
        "}"}], ",", 
       RowBox[{"FoncGenPoisson", "[", 
        RowBox[{
         RowBox[{"LaplaceUnif", "[", 
          RowBox[{"s", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
         "\[Lambda]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoefGenFunctionCompoundPoissonUnif", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "z", ",", "m", ",",
          "r"}], "}"}], ",", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"-", "r"}], ")"}]}], "*", 
         RowBox[{"LaplaceCompoundPoissonUnif", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"z", "/", "m"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}]}], ",", "\[Lambda]", ",", 
           "\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ExpansionCoefficientCompoundPoissonUnif", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        StyleBox[
         RowBox[{
         "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "z", ",", "m", 
          ",", "r", ",", "K"}],
         FontWeight->"Plain"], "}"}], ",", 
       RowBox[{
        RowBox[{"Expansion", "=", 
         RowBox[{"Normal", "[", 
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"CoefGenFunctionCompoundPoissonUnif", "[", 
             RowBox[{
             "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "z", ",", "m",
               ",", "r"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", "0", ",", "K"}], "}"}]}], "]"}], "]"}]}], ";", 
        
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{"i", "+", "r", "-", "1"}], ",", "i"}], "]"}], "]"}]}],
             "/", 
            RowBox[{"(", 
             RowBox[{"i", "!"}], ")"}]}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"Expansion", ",", 
               RowBox[{"{", 
                RowBox[{"z", ",", "i"}], "}"}]}], "]"}], "/.", 
             RowBox[{"z", "\[Rule]", "0"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "K"}], "}"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Syst\[EGrave]me", " ", "de", " ", "polyn\[OHat]mes", " ", 
     "orthogonaux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qnm", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "m", ",", "r", ",", "K"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"QnGamma", "[", 
           RowBox[{"i", ",", "x", ",", "m", ",", "r"}], "]"}], 
          RowBox[{"muGamma", "[", 
           RowBox[{"x", ",", "m", ",", "r"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "K"}], "}"}]}], "]"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DensityExpansion", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"VectorCoef", ",", "x", ",", "m", ",", "r", ",", "K"}], "}"}],
        ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"VectorCoef", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"K", "+", "1"}]}], "]"}], "]"}], "*", 
         RowBox[{"Qnm", "[", 
          RowBox[{"x", ",", "m", ",", "r", ",", "K"}], "]"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"SurvivalExpansion", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"VectorCoef", ",", "u", ",", "m", ",", "r", ",", "K"}], "}"}], 
      ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"DensityExpansion", "[", 
         RowBox[{"VectorCoef", ",", "x", ",", "m", ",", "r", ",", "K"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "u", ",", 
          RowBox[{"+", "\[Infinity]"}]}], "}"}], ",", 
        RowBox[{"Assumptions", "->", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "[", "u", "]"}], "\[NotEqual]", "0"}], "||", 
          RowBox[{
           RowBox[{"Re", "[", "u", "]"}], ">", "0"}]}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Evaluation", " ", "de", " ", "la", " ", "probabilit\[EAcute]", " ", "de",
      " ", "ruine", " ", "via", " ", "ls", " ", "FFT"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Fonction", " ", "de", " ", "survie", " ", "via", " ", "les", " ", 
     "FFT"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Calcul", " ", "des", " ", "Sn"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"FoncGenPoissonFFT", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "\[Lambda]"}], "}"}], ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[Lambda]", 
         RowBox[{"(", 
          RowBox[{"s", "-", "1"}], ")"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LaplaceCompoundPoissonUnifSurvival", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"FoncGenPoissonFFT", "[", 
           RowBox[{
            RowBox[{"LaplaceUnif", "[", 
             RowBox[{
              RowBox[{"-", "s"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], 
            ",", "\[Lambda]"}], "]"}]}], ")"}], "/", "s"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SnCompoundPoissonUnifSurvival", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "b", ",", "u", ",", "n", ",", "\[Lambda]", ",", "\[Alpha]", ",", 
         "\[Beta]"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"b", "/", "2"}], "]"}], "/", "2"}], "/", "u"}], "*", 
         RowBox[{"Re", "[", 
          RowBox[{"LaplaceCompoundPoissonUnifSurvival", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"b", "/", "2"}], "/", "u"}], ",", "\[Lambda]", ",", 
            "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"b", "/", "2"}], "]"}], "/", "u"}], "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "^", 
             RowBox[{"(", "i", ")"}]}], "*", 
            RowBox[{"Re", "[", 
             RowBox[{"LaplaceCompoundPoissonUnifSurvival", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", "+", 
                   RowBox[{"I", "*", "i", "*", "2", "\[Pi]"}]}], ")"}], "/", 
                 "2"}], "/", "u"}], ",", "\[Lambda]", ",", "\[Alpha]", ",", 
               "\[Beta]"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n", ",", "1"}], "}"}]}], "]"}]}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SurvivalCompoundPoissonUnifFFT", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "m", ",", "b", ",", "u", ",", "n", ",", "\[Lambda]", ",", "\[Alpha]", 
         ",", "\[Beta]"}], "}"}], ",", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Binomial", "[", 
           RowBox[{"m", ",", "i"}], "]"}], "*", 
          RowBox[{"2", "^", 
           RowBox[{"(", 
            RowBox[{"-", "m"}], ")"}]}], 
          RowBox[{"SnCompoundPoissonUnifSurvival", "[", 
           RowBox[{"b", ",", "u", ",", 
            RowBox[{"n", "+", "i"}], ",", "\[Lambda]", ",", "\[Alpha]", ",", 
            "\[Beta]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "m", ",", "1"}], "}"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Evaluation", " ", "de", " ", "la", " ", "probabilit\[EAcute]", " ", "de",
      " ", "ruine", " ", "via", " ", "la", " ", "scaled", " ", "laplace", " ",
      "Transform"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LaplaceCompoundPoissonUnifMnats", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]"}], 
        "}"}], ",", 
       RowBox[{"FoncGenPoissonFFT", "[", 
        RowBox[{
         RowBox[{"LaplaceUnif", "[", 
          RowBox[{
           RowBox[{"-", "s"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
         "\[Lambda]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Formule", " ", "de", " ", "la", " ", "densit\[EAcute]", " ", "et", " ", 
     "transform\[EAcute]e", " ", "de", " ", "Laplace", " ", "de", " ", "la", 
     " ", "probabilit\[EAcute]", " ", "de", " ", "ruine"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SurvivalCompoundPoissonUnifMnats", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]Mnats", 
         ",", "bMnats", ",", "u"}], "}"}], ",", 
       RowBox[{
        RowBox[{"LaplaceCompoundPoissonUnif", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"LaplaceCompoundPoissonUnifMnats", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Log", "[", "bMnats", "]"}], "*", "j"}], ",", 
             "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "\[Alpha]Mnats"}], "}"}]}], "]"}]}], 
        ";", 
        RowBox[{"LaplaceCompoundPoissonUnif", "=", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"LaplaceCompoundPoissonUnif", ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sum", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sum", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Binomial", "[", 
              RowBox[{"\[Alpha]Mnats", ",", "j"}], "]"}], "*", 
             RowBox[{"Binomial", "[", 
              RowBox[{"j", ",", "k"}], "]"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"j", "-", "k"}], ")"}]}], 
             RowBox[{"LaplaceCompoundPoissonUnif", "[", 
              RowBox[{"[", 
               RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]",
             ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "k", ",", "\[Alpha]Mnats"}], "}"}]}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"Floor", "[", 
             RowBox[{"\[Alpha]Mnats", "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "u"}], "*", 
                RowBox[{"Log", "[", "bMnats", "]"}]}], "]"}]}], "]"}]}], 
           "}"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DensityCompoundPoissonGammaMnats", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]Mnats", 
         ",", "bMnats", ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"\[Alpha]Mnats", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], "]"}]}], 
         "]"}], 
        RowBox[{"Log", "[", "bMnats", "]"}], 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{"\[Alpha]Mnats", "+", "2"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]Mnats", "*", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{"\[Alpha]Mnats", "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], "]"}]}], 
              "]"}], "+", "1"}], "]"}]}], ")"}]}], "*", "\[IndentingNewLine]", 
        RowBox[{"Sum", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", 
            RowBox[{"(", "j", ")"}]}], "*", 
           RowBox[{
            RowBox[{
             RowBox[{"LaplaceCompoundPoissonUnifMnats", "[", 
              RowBox[{
               RowBox[{"j", "+", 
                RowBox[{"Floor", "[", 
                 RowBox[{"\[Alpha]Mnats", "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], 
                   "]"}]}], "]"}]}], ",", "\[Lambda]", ",", "\[Alpha]", ",", 
               "\[Beta]"}], "]"}], "/", 
             RowBox[{"j", "!"}]}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Alpha]Mnats", "-", 
               RowBox[{"Floor", "[", 
                RowBox[{"\[Alpha]Mnats", "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], 
                  "]"}]}], "]"}], "-", "j"}], ")"}], "!"}]}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{"\[Alpha]Mnats", "-", 
             RowBox[{"Floor", "[", 
              RowBox[{"\[Alpha]Mnats", "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], "]"}]}], 
              "]"}]}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SurvivalCompoundPoissonGammaMnatsBis", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]Mnats", 
         ",", "bMnats", ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"\[Alpha]Mnats", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], "]"}]}], 
         "]"}], 
        RowBox[{"Log", "[", "bMnats", "]"}], 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{"\[Alpha]Mnats", "+", "2"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]Mnats", "*", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{"\[Alpha]Mnats", "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], "]"}]}], 
              "]"}], "+", "1"}], "]"}]}], ")"}]}], "*", "\[IndentingNewLine]", 
        RowBox[{"Sum", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", 
            RowBox[{"(", "j", ")"}]}], "*", 
           RowBox[{
            RowBox[{
             RowBox[{"LaplaceCompoundPoissonUnifMnats", "[", 
              RowBox[{
               RowBox[{"j", "+", 
                RowBox[{"Floor", "[", 
                 RowBox[{"\[Alpha]Mnats", "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], 
                   "]"}]}], "]"}]}], ",", "\[Lambda]", ",", "\[Alpha]", ",", 
               "\[Beta]"}], "]"}], "/", 
             RowBox[{"j", "!"}]}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Alpha]Mnats", "-", 
               RowBox[{"Floor", "[", 
                RowBox[{"\[Alpha]Mnats", "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], 
                  "]"}]}], "]"}], "-", "j"}], ")"}], "!"}]}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{"\[Alpha]Mnats", "-", 
             RowBox[{"Floor", "[", 
              RowBox[{"\[Alpha]Mnats", "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Log", "[", "bMnats", "]"}]}], "*", "x"}], "]"}]}], 
              "]"}]}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Algorithme", " ", "de", " ", "Panjer"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Discr\[EAcute]tisation", ",", " ", 
     RowBox[{
     "h", " ", "repr\[EAcute]sente", " ", "le", " ", "pas", " ", "de", " ", 
      "discr\[EAcute]tisation"}], ",", " ", 
     RowBox[{"u", " ", "est", " ", "la", " ", "limite"}], ",", " ", 
     RowBox[{
     "on", " ", "cr\[EAcute]er", " ", "un", " ", "vecteur", " ", "de", " ", 
      "taille", " ", 
      RowBox[{"u", "/", "h"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiscretizeUnif", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "umax", ",", "h"}], "}"}], 
       ",", 
       RowBox[{
        RowBox[{"PartitionGrid", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"k", "*", "h"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"umax", "/", "h"}], ",", "1"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"ProbaU", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"CDF", "[", 
              RowBox[{
               RowBox[{"UniformDistribution", "[", 
                RowBox[{"{", 
                 RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PartitionGrid", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", 
                  RowBox[{"h", "/", "2"}]}], ",", "0"}], "]"}]}], "]"}], "-", 
             
             RowBox[{"CDF", "[", 
              RowBox[{
               RowBox[{"UniformDistribution", "[", 
                RowBox[{"{", 
                 RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PartitionGrid", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", 
                  RowBox[{"h", "/", "2"}]}], ",", "0"}], "]"}]}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "PartitionGrid", "]"}], 
             RowBox[{"(*", 
              RowBox[{"-", "1"}], "*)"}], ",", "1"}], "}"}]}], "]"}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProbaDiscretePoissonCompoundUnif", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "h", ",", "VectProbaU", ",", "umax"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"ProbaCompoundPoisson", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"ProbaCompoundPoisson", ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", "\[Lambda]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<", 
           RowBox[{
            RowBox[{"umax", "/", "h"}], "+", "1"}]}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ProbaCompoundPoisson", ",", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"\[Lambda]", "*", 
               RowBox[{"k", "/", "j"}], "*", 
               RowBox[{"VectProbaU", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "*", 
               RowBox[{"ProbaCompoundPoisson", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"j", "-", "k"}], ")"}], "+", "1"}], "]"}], "]"}]}],
               ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "j", ",", "1"}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}], ";", "ProbaCompoundPoisson"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SurvivalPoissonCompoundUnifPanger", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"VectProbaCompoundPoisson", ",", "h", ",", "u"}], "}"}], ",", 
       
       RowBox[{"1", "-", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"VectProbaCompoundPoisson", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"u", "/", "h"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638539286614037*^9, 3.638539293795817*^9}, 
   3.638539460645514*^9, {3.638539545676106*^9, 3.638539665291462*^9}, {
   3.638619823598771*^9, 3.638619823898362*^9}, {3.63861991200463*^9, 
   3.638620023197713*^9}, {3.638621182602519*^9, 3.638621309261426*^9}, {
   3.638621346517188*^9, 3.638621354760704*^9}, {3.6386222474998217`*^9, 
   3.638622248574028*^9}, 3.6431032390757437`*^9}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"VectorCoef", ",", "u", ",", "m", ",", "r", ",", "K"}], "}"}], 
   ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"DensityExpansion", "[", 
      RowBox[{"VectorCoef", ",", "x", ",", "m", ",", "r", ",", "K"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "u", ",", 
       RowBox[{"+", "\[Infinity]"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"Im", "[", "u", "]"}], "\[NotEqual]", "0"}], "||", 
       RowBox[{
        RowBox[{"Re", "[", "u", "]"}], ">", "0"}]}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.638539873970881*^9, 3.638586956007145*^9, {3.638620013956636*^9, 
   3.638620025928157*^9}, 3.638621270403163*^9, 3.638621312940763*^9, 
   3.6386213570120993`*^9, 3.638622250186404*^9, 3.638624519207757*^9, 
   3.638694506224688*^9, 3.638850979050748*^9, 3.638853101416024*^9, 
   3.6388557719900913`*^9, 3.6388567845256567`*^9, 3.638947078182485*^9, 
   3.6389471778114777`*^9, 3.638948622555974*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Sinistres", " ", "de", " ", "loi", " ", "Uniforme"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Fr\[EAcute]quence", " ", "des", " ", "sinistres", " ", "de", " ", "loi", 
     " ", "de", " ", "Poisson"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]X", "=", 
     RowBox[{"\[Lambda]", "*", 
      RowBox[{"Mean", "[", 
       RowBox[{"UniformDistribution", "[", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VarX", "=", 
     RowBox[{
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"Mean", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Moment", "[", 
        RowBox[{
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], ",", "2"}], 
        "]"}], "*", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]U", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VarU", "=", 
     RowBox[{"Variance", "[", 
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NbParametrization", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"VarU", "/", "\[Mu]U"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Beta]", "-", "\[Alpha]"}], ")"}], "/", "2"}], ",", 
      "\[Mu]X", ",", 
      RowBox[{"VarX", "/", "\[Mu]X"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"r", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Mu]U", "^", 
        RowBox[{"(", "2", ")"}]}], "/", "VarU"}], ",", "1", ",", "1", ",", 
      RowBox[{
       RowBox[{"\[Mu]X", "^", 
        RowBox[{"(", "2", ")"}]}], "/", "VarX"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Fonction", " ", "g\[EAcute]n\[EAcute]ratrice", " ", "des", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CoefGenFunctionCompoundPoissonUnif", "[", 
     RowBox[{
     "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "z", ",", "m", ",", 
      "r"}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.638539738675209*^9, 3.63853981836407*^9}, 
   3.6385398827372847`*^9, {3.638540192286167*^9, 3.638540205576561*^9}, {
   3.638540272392391*^9, 3.638540312997925*^9}, {3.638540360803443*^9, 
   3.6385404224265203`*^9}, {3.638540768710063*^9, 3.638540769193771*^9}, {
   3.638586961980814*^9, 3.6385869643657007`*^9}, {3.638587390817577*^9, 
   3.638587422452588*^9}, {3.638587481474715*^9, 3.638587508888276*^9}, {
   3.638587539417931*^9, 3.6385876045863047`*^9}, {3.6385876914973507`*^9, 
   3.638587691661275*^9}, 3.638587743686722*^9, {3.638620034256865*^9, 
   3.6386200572093153`*^9}, {3.638620101820427*^9, 3.638620141191674*^9}, {
   3.638620226542293*^9, 3.6386202270131607`*^9}, {3.6386202978756733`*^9, 
   3.6386203012712584`*^9}, {3.638620490080434*^9, 3.638620497801238*^9}, {
   3.638850987170038*^9, 3.638851007296398*^9}, {3.638851448250115*^9, 
   3.6388514506719093`*^9}, {3.638851624850398*^9, 3.6388516477194138`*^9}, {
   3.638851725829691*^9, 3.638851727840909*^9}, {3.638852036150546*^9, 
   3.638852145940255*^9}, {3.638853013234448*^9, 3.638853039623724*^9}, {
   3.638853112703821*^9, 3.638853125257236*^9}, {3.638856594504771*^9, 
   3.638856649550549*^9}, {3.6389470951685677`*^9, 3.638947175709025*^9}, {
   3.638970095075541*^9, 3.6389701159297028`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["5", "3"], ",", "5", ",", "15", ",", 
   FractionBox["23", "3"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.638539852406025*^9, 3.638539884488379*^9, 3.6385402108409653`*^9, {
   3.638540273532302*^9, 3.638540313536325*^9}, {3.638540361705123*^9, 
   3.638540387425634*^9}, 3.63854042421385*^9, 3.6385407697309523`*^9, 
   3.638586966756331*^9, {3.638587499092058*^9, 3.638587510145009*^9}, {
   3.6385875413984203`*^9, 3.638587554349798*^9}, {3.6385875949247437`*^9, 
   3.638587604823481*^9}, 3.638587692362421*^9, 3.638587744205764*^9, {
   3.6386200501773567`*^9, 3.6386200578769197`*^9}, {3.63862010236648*^9, 
   3.6386201416884336`*^9}, 3.6386202273306007`*^9, 3.6386203033367357`*^9, 
   3.63862049840283*^9, 3.6386244787371607`*^9, 3.6386945112806587`*^9, {
   3.638851003506628*^9, 3.638851007590602*^9}, 3.638851648724019*^9, 
   3.638851732189587*^9, 3.638852147741467*^9, {3.638853024511788*^9, 
   3.638853040149757*^9}, {3.638853102313753*^9, 3.6388531305631227`*^9}, 
   3.638855774222437*^9, 3.638856650342751*^9, 3.638856785662057*^9, 
   3.638947188129773*^9, 3.638948625686152*^9, 3.6389701188462954`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "1", ",", 
   FractionBox["45", "23"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.638539852406025*^9, 3.638539884488379*^9, 3.6385402108409653`*^9, {
   3.638540273532302*^9, 3.638540313536325*^9}, {3.638540361705123*^9, 
   3.638540387425634*^9}, 3.63854042421385*^9, 3.6385407697309523`*^9, 
   3.638586966756331*^9, {3.638587499092058*^9, 3.638587510145009*^9}, {
   3.6385875413984203`*^9, 3.638587554349798*^9}, {3.6385875949247437`*^9, 
   3.638587604823481*^9}, 3.638587692362421*^9, 3.638587744205764*^9, {
   3.6386200501773567`*^9, 3.6386200578769197`*^9}, {3.63862010236648*^9, 
   3.6386201416884336`*^9}, 3.6386202273306007`*^9, 3.6386203033367357`*^9, 
   3.63862049840283*^9, 3.6386244787371607`*^9, 3.6386945112806587`*^9, {
   3.638851003506628*^9, 3.638851007590602*^9}, 3.638851648724019*^9, 
   3.638851732189587*^9, 3.638852147741467*^9, {3.638853024511788*^9, 
   3.638853040149757*^9}, {3.638853102313753*^9, 3.6388531305631227`*^9}, 
   3.638855774222437*^9, 3.638856650342751*^9, 3.638856785662057*^9, 
   3.638947188129773*^9, 3.638948625686152*^9, 3.638970118848999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Coefficients", " ", "et", " ", "polyn\[OHat]mes", " ", "orthogonaux"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"KPoly", "=", "75"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"N", "[", 
     RowBox[{"VectorCoef", "=", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ExpansionCoefficientCompoundPoissonUnif", "[", 
         RowBox[{
         "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "z", ",", 
          RowBox[{"m", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", ",", 
          StyleBox[
           RowBox[{"r", "[", 
            RowBox[{"[", "i", "]"}], "]"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox["KPoly",
           FontWeight->"Plain"]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NbParametrization"}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox["]",
      FontWeight->"Plain"]}], 
    StyleBox["]",
     FontWeight->"Plain"]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{"(*", 
    RowBox[{
    "Matrice", " ", "des", " ", "polynomes", " ", "multipli\[EAcute]s", " ", 
     "par", " ", "leur", " ", "mesure"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"DensityCompoundPoissonUnifPolynomial", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"DensityExpansion", "[", 
         RowBox[{
          RowBox[{"VectorCoef", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "x", ",", 
          RowBox[{"m", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"r", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "KPoly"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NbParametrization"}], "}"}]}], "]"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SurvivalExpansion", "[", 
         RowBox[{
          RowBox[{"VectorCoef", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "u", ",", 
          RowBox[{"m", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"r", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "KPoly"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NbParametrization"}], "}"}]}], "]"}]}], 
     "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638539918479126*^9, 3.638540009157805*^9}, {
   3.6385400627063503`*^9, 3.638540081145959*^9}, {3.6385402482218323`*^9, 
   3.6385402887964563`*^9}, {3.63854043374852*^9, 3.638540435251361*^9}, {
   3.6385407844704*^9, 3.638540787188183*^9}, {3.638540846694788*^9, 
   3.638540847988522*^9}, {3.638587629890418*^9, 3.6385876303763933`*^9}, {
   3.638620060519302*^9, 3.638620091892494*^9}, {3.638620126067238*^9, 
   3.6386201274311123`*^9}, {3.6386201819465523`*^9, 3.63862018355921*^9}, {
   3.638620307931242*^9, 3.638620384320118*^9}, 3.6386225738202763`*^9, {
   3.63862401023564*^9, 3.638624015099389*^9}, {3.638624348524589*^9, 
   3.638624351722529*^9}, 3.6386244346263227`*^9, {3.638624531282729*^9, 
   3.6386245405851994`*^9}, {3.6388510137460623`*^9, 
   3.6388510168269157`*^9}, {3.638852806102655*^9, 3.638852807657473*^9}, 
   3.638852859751964*^9, {3.638852919651341*^9, 3.638852962769462*^9}, {
   3.638853134626635*^9, 3.6388531354613333`*^9}, {3.638853223745566*^9, 
   3.638853226580284*^9}, {3.6388532700641537`*^9, 3.638853270817278*^9}, {
   3.63885665294868*^9, 3.6388566544181767`*^9}, {3.638856772265986*^9, 
   3.638856803980682*^9}, {3.63885685698772*^9, 3.638856882692498*^9}, {
   3.6388665794229183`*^9, 3.63886658147791*^9}, {3.638947205968405*^9, 
   3.638947256040086*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.950212931632136`", "3.550335347110801`", "11.51312336492977`", 
      "31.147761603715086`", "74.49765934496482`", "159.34172767499948`", 
      "310.751030110136`", "557.5058652673498`", "928.7482498999261`", 
      "1445.6649960586567`", "2114.345256297674`", "2918.055525315672`", 
      "3814.889841326041`", "4738.669927245164`", "5608.3634654480675`", 
      "6338.603283423642`", "6855.465449733657`", "7107.635103011026`", 
      "7075.268873684244`", "6771.563079500076`", "6238.890611261694`", 
      "5539.213449115666`", "4744.327420538491`", "3922.9526612029954`", 
      "3134.341081992092`", "2421.2751859536484`", "1809.5660948745644`", 
      "1309.1129307103947`", "917.2662253844684`", "622.4989247534627`", 
      "409.68250522149305`", "261.1824682170703`", "161.5723279800425`", 
      "96.96155224881312`", "56.36054532075742`", "31.83514056025104`", 
      "17.508367496684627`", "9.14424144569224`", "4.905814936508893`", 
      "2.3029791747482435`", "1.17183287239607`", "0.5910744873233054`", 
      "0.18880868093039074`", "0.12684697786022814`", "0.10354661571432164`", 
      
      RowBox[{"-", "0.09926326381524903`"}], "0.13906452945614187`", 
      RowBox[{"-", "0.081838514054455`"}], "0.005881992345050855`", 
      "0.06303165673620492`", 
      RowBox[{"-", "0.07642676450913`"}], "0.02629413235820708`", 
      "0.06205806531091296`", 
      RowBox[{"-", "0.13925173526230983`"}], "0.16160802786612805`", 
      RowBox[{"-", "0.11597669209307383`"}], "0.027828710401955878`", 
      "0.05320902248670044`", 
      RowBox[{"-", "0.08181487833749121`"}], "0.04299657041397734`", 
      "0.03948020052172038`", 
      RowBox[{"-", "0.11710729548360523`"}], "0.14485168682761523`", 
      RowBox[{"-", "0.10710857149699406`"}], "0.02637282438215759`", 
      "0.050197924683490915`", 
      RowBox[{"-", "0.07827309240800545`"}], "0.041813858757431696`", 
      "0.038130542381654496`", 
      RowBox[{"-", "0.11604753095482492`"}], "0.14832259754544586`", 
      RowBox[{"-", "0.1179316142011041`"}], "0.04340171760115481`", 
      "0.0326296329705882`", 
      RowBox[{"-", "0.06813316752836926`"}], "0.04521882517498522`"},
     {"0.950212931632136`", "2.049787068367864`", "1.4502129316321362`", 
      "0.049787068367863944`", 
      RowBox[{"-", "0.27478706836786393`"}], "0.03312040170119728`", 
      "0.05914150306070749`", 
      RowBox[{"-", "0.038308169727374164`"}], "0.009338262319966747`", 
      "0.00045836466416024016`", 
      RowBox[{"-", "0.00023838210042767335`"}], 
      RowBox[{"-", "0.00046766147019923374`"}], 
      RowBox[{"-", "0.0009795163932732774`"}], "0.0036979465934743098`", 
      RowBox[{"-", "0.006395344720497932`"}], "0.008361842074830105`", 
      RowBox[{"-", "0.009379071851956067`"}], "0.00944778172301999`", 
      RowBox[{"-", "0.008636933268148014`"}], "0.007046511991158717`", 
      RowBox[{"-", "0.004813705588089877`"}], "0.002118978435066647`", 
      "0.0008202697522962552`", 
      RowBox[{"-", "0.0037658853379573948`"}], "0.006479311837215937`", 
      RowBox[{"-", "0.008741806751903454`"}], "0.010372054010654386`", 
      RowBox[{"-", "0.011239865229500627`"}], "0.011275255470937226`", 
      RowBox[{"-", "0.01047252809254639`"}], "0.008889312984709156`", 
      RowBox[{"-", "0.006640832218879892`"}], "0.0038899977708795014`", 
      RowBox[{"-", "0.000834236731785682`"}], 
      RowBox[{"-", "0.0023098444232243264`"}], "0.005322723880831996`", 
      RowBox[{"-", "0.007997905188479239`"}], "0.010156362082714358`", 
      RowBox[{"-", "0.01165848028490713`"}], "0.012412722810380519`", 
      RowBox[{"-", "0.012380525513350038`"}], "0.011577232243780208`", 
      RowBox[{"-", "0.010069179917377873`"}], "0.00796732039562449`", 
      RowBox[{"-", "0.0054179989538950864`"}], "0.002591683388711223`", 
      "0.0003294560702050731`", 
      RowBox[{"-", "0.0031641817439406446`"}], "0.005744140111544485`", 
      RowBox[{"-", "0.00792433099870006`"}], "0.009591446523189898`", 
      RowBox[{"-", "0.010669620822827042`"}], "0.011123341880536158`", 
      RowBox[{"-", "0.010957491788358064`"}], "0.010214685630386485`", 
      RowBox[{"-", "0.008970257789254346`"}], "0.007325386673135157`", 
      RowBox[{"-", "0.005398946836071724`"}], "0.003318727200280848`", 
      RowBox[{"-", "0.0012126553452428065`"}], 
      RowBox[{"-", "0.00079937610941748`"}], "0.0026125678198780883`", 
      RowBox[{"-", "0.004142756572065997`"}], "0.005330175591782475`", 
      RowBox[{"-", "0.006141307460708158`"}], "0.00656884544449313`", 
      RowBox[{"-", "0.006629908307124941`"}], "0.006362763301280092`", 
      RowBox[{"-", "0.005822395746222598`"}], "0.005075317504198622`", 
      RowBox[{"-", "0.0041940292265814265`"}], "0.003251543276269841`", 
      RowBox[{"-", "0.002316338645514025`"}], "0.0014480605973512916`", 
      RowBox[{"-", "0.0006942020352765501`"}], "0.00008791735744824423`"},
     {"0.950212931632136`", "0.049787068367863944`", 
      RowBox[{"-", "0.32756484614564174`"}], "0.3090463276271232`", 
      RowBox[{"-", "0.20071299429378986`"}], "0.09189955122108755`", 
      RowBox[{"-", "0.01301213205589059`"}], 
      RowBox[{"-", "0.03252344614429666`"}], "0.051590056431233496`", 
      RowBox[{"-", "0.053317097609974745`"}], "0.045670096204873604`", 
      RowBox[{"-", "0.03440504854234809`"}], "0.023111546202887176`", 
      RowBox[{"-", "0.013666707454535123`"}], "0.0067653872399078075`", 
      RowBox[{"-", "0.0023818144698589216`"}], "0.00011682892915602241`", 
      "0.0005678575517576289`", 
      RowBox[{"-", "0.00020800813986000073`"}], 
      RowBox[{"-", "0.0007369791547742391`"}], "0.0019126456511168104`", 
      RowBox[{"-", "0.0030706486467766123`"}], "0.004055439811452216`", 
      RowBox[{"-", "0.004785030702457633`"}], "0.005231077354392921`", 
      RowBox[{"-", "0.0054011106016370125`"}], "0.005324134344353178`", 
      RowBox[{"-", "0.005039825563239569`"}], "0.004591022770637012`", 
      RowBox[{"-", "0.004018938513272888`"}], "0.003360465315688314`", 
      RowBox[{"-", "0.002646983242851384`"}], "0.0019041670765902398`", 
      RowBox[{"-", "0.0011523977238169887`"}], "0.0004074859444314505`", 
      "0.00031849342090833075`", 
      RowBox[{"-", "0.0010163857831670252`"}], "0.0016792335324770859`", 
      RowBox[{"-", "0.0023016794922027357`"}], "0.002879504955840825`", 
      RowBox[{"-", "0.003409293841910489`"}], "0.0038882056686363733`", 
      RowBox[{"-", "0.004313836434286882`"}], "0.00468414627466231`", 
      RowBox[{"-", "0.004997434579685361`"}], "0.00525234609483143`", 
      RowBox[{"-", "0.0054478947350614405`"}], "0.005583494970022166`", 
      RowBox[{"-", "0.005658993453175856`"}], "0.005674695946699546`", 
      RowBox[{"-", "0.005631386506889703`"}], "0.005530337363117109`", 
      RowBox[{"-", "0.005373308998245493`"}], "0.005162540683949882`", 
      RowBox[{"-", "0.004900732206776145`"}], "0.004591017801911405`", 
      RowBox[{"-", "0.004236933445459257`"}], "0.0038423786872608156`", 
      RowBox[{"-", "0.0034115741704236163`"}], "0.002949015907643294`", 
      RowBox[{"-", "0.0024594272877034445`"}], "0.0019477096817426339`", 
      RowBox[{"-", "0.0014188924167470621`"}], "0.0008780827884210465`", 
      RowBox[{"-", "0.00033041669965828805`"}], 
      RowBox[{"-", "0.00021898956495165786`"}], "0.0007650859841877718`", 
      RowBox[{"-", "0.0013029334777831443`"}], "0.0018277462795077582`", 
      RowBox[{"-", "0.002334931712878352`"}], "0.002820127116278929`", 
      RowBox[{"-", "0.003279233700627563`"}], "0.0037084471567619885`", 
      RowBox[{"-", "0.004104284862195896`"}], "0.0044636095683659545`", 
      RowBox[{"-", "0.004783649480293993`"}]},
     {"0.9502129316321365`", "0.06964002096183389`", 
      RowBox[{"-", "0.1597001339137912`"}], "0.036006614953235615`", 
      "0.044895793912423244`", 
      RowBox[{"-", "0.06372375196337662`"}], "0.053700272505855885`", 
      RowBox[{"-", "0.03959403425819896`"}], "0.030799566329087407`", 
      RowBox[{"-", "0.02786767715741419`"}], "0.02846822473601603`", 
      RowBox[{"-", "0.030340243893684834`"}], "0.03212998290104948`", 
      RowBox[{"-", "0.03328773178868566`"}], "0.03373178937921768`", 
      RowBox[{"-", "0.033571046646139135`"}], "0.032948505093115546`", 
      RowBox[{"-", "0.03197958734781422`"}], "0.030742929835717348`", 
      RowBox[{"-", "0.029291657786558633`"}], "0.027667534584030956`", 
      RowBox[{"-", "0.025910998777769194`"}], "0.024065947384057585`", 
      RowBox[{"-", "0.0221805031612309`"}], "0.020305469157953067`", 
      RowBox[{"-", "0.01849184092637619`"}], "0.016788234163059683`", 
      RowBox[{"-", "0.015238657790597177`"}], "0.013880786102695379`", 
      RowBox[{"-", "0.012744738173615365`"}], "0.011852313868741006`", 
      RowBox[{"-", "0.011216623342102766`"}], "0.010842053518603843`", 
      RowBox[{"-", "0.010724525576361566`"}], "0.010852005328428163`", 
      RowBox[{"-", "0.01120523210221713`"}], "0.011758631998701995`", 
      RowBox[{"-", "0.012481379762312018`"}], "0.013338571295719382`", 
      RowBox[{"-", "0.0142924671146218`"}], "0.01530376634361866`", 
      RowBox[{"-", "0.016332871458750852`"}], "0.017341105908402876`", 
      RowBox[{"-", "0.018291849876781008`"}], "0.019151563602897163`", 
      RowBox[{"-", "0.01989067261184735`"}], "0.020484294723220033`", 
      RowBox[{"-", "0.020912794549096243`"}], "0.021162157167094187`", 
      RowBox[{"-", "0.021224178554619708`"}], "0.02109647601915919`", 
      RowBox[{"-", "0.02078232709753237`"}], "0.020290350088871624`", 
      RowBox[{"-", "0.019634043421308842`"}], "0.018831204346716028`", 
      RowBox[{"-", "0.017903249954922287`"}], "0.016874465169151108`", 
      RowBox[{"-", "0.015771203225450486`"}], "0.014621064173491285`", 
      RowBox[{"-", "0.013452076209831128`"}], "0.012291903233870681`", 
      RowBox[{"-", "0.011167099984338786`"}], "0.010102433566987219`", 
      RowBox[{"-", "0.009120287228575651`"}], "0.008240158980517283`", 
      RowBox[{"-", "0.007478264242048341`"}], "0.006847248170243877`", 
      RowBox[{"-", "0.006356009880676223`"}], "0.006009637437886784`", 
      RowBox[{"-", "0.005809449399116053`"}], "0.0057531359049242175`", 
      RowBox[{"-", "0.005834989889912404`"}], "0.0060462169840930155`", 
      RowBox[{"-", "0.006375311123100335`"}], "0.006808481801487766`", 
      RowBox[{"-", "0.007330118289202406`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6386243413625393`*^9, {3.638624433193708*^9, 3.6386244388521433`*^9}, 
   3.6386244798458233`*^9, {3.638624527758988*^9, 3.638624543948839*^9}, 
   3.638694520123722*^9, 3.6388510219477797`*^9, 3.6388517309185963`*^9, 
   3.638851867155879*^9, {3.638852803385728*^9, 3.63885282790969*^9}, 
   3.6388528601717443`*^9, 3.638852920155322*^9, 3.638852956144878*^9, {
   3.6388530256224947`*^9, 3.638853041349535*^9}, {3.6388531033100157`*^9, 
   3.6388531393389797`*^9}, 3.6388532777465487`*^9, 3.638855780369389*^9, 
   3.638855821165331*^9, {3.638856767656494*^9, 3.6388568154591837`*^9}, 
   3.63885686424765*^9, 3.638856894795783*^9, 3.63886659312188*^9, {
   3.638947210655878*^9, 3.638947261665635*^9}, 3.638948632105195*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6389472064974117`*^9, 3.638947211388795*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"UsualStopLossCompoundPoissonUniformPolynomial", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/.", 
      RowBox[{"u", "\[Rule]", 
       RowBox[{"y", "+", "c"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"+", "\[Infinity]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6386231206008787`*^9, 3.6386231249112186`*^9}, 
   3.6386240638872633`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Application", " ", "de", " ", 
    RowBox[{"l", "'"}], "algoo", " ", "de", " ", "Panjer"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{"1", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"umax", "=", "60"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VectProbaU", "=", 
     RowBox[{"DiscretizeUnif", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "umax", ",", "h"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VectProbaCompoundPoisson", "=", 
     RowBox[{"ProbaDiscretePoissonCompoundUnif", "[", 
      RowBox[{"\[Lambda]", ",", "h", ",", "VectProbaU", ",", "umax"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638540111374579*^9, 3.638540130700325*^9}, {
  3.638540161947742*^9, 3.638540175738427*^9}, {3.638540451532786*^9, 
  3.638540461714986*^9}, {3.638620411841198*^9, 3.638620428835284*^9}, {
  3.638620511518532*^9, 3.6386205121219482`*^9}, {3.638620564696506*^9, 
  3.638620571057119*^9}, {3.638622524901046*^9, 3.638622525295747*^9}, {
  3.638947267632079*^9, 3.6389472691846333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Survival", " ", "Function", " ", "Via", " ", "Inversion", " ", "of", " ", 
    "Fourier"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bFFT", "=", "18.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mFFT", "=", "11"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFFT", "=", "15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uFFT", "=", "60"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Param\[EAcute]trisation", " ", "Mnatskanov"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]Mnats", "=", "32"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bMnats", "=", "1.115"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Comparaison", " ", "des", " ", "valeurs"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"N", "[", 
     RowBox[{"SurvivalCompoundPoissonUnifMnats", "[", 
      RowBox[{
      "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]Mnats", ",",
        "bMnats", ",", "uFFT"}], "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
    RowBox[{
    "mFFT", ",", "bFFT", ",", "uFFT", ",", "nFFT", ",", "\[Lambda]", ",", 
     "\[Alpha]", ",", "\[Beta]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"SurvivalCompoundPoissonGammaPolynomial", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/.", 
      RowBox[{"u", "\[Rule]", "uFFT"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.638620436492017*^9, 3.6386204424860888`*^9}, {
   3.638620681216916*^9, 3.638620707538439*^9}, {3.638621411861774*^9, 
   3.638621417389895*^9}, {3.6386222736976147`*^9, 3.638622322026144*^9}, 
   3.638624044740839*^9, {3.638626459862225*^9, 3.638626472508975*^9}, {
   3.6386265092528067`*^9, 3.6386265469549026`*^9}, 3.6386265789084578`*^9, {
   3.638626696574781*^9, 3.6386266975933228`*^9}, {3.638947280623953*^9, 
   3.638947286312316*^9}, {3.638947755352963*^9, 3.6389477558294563`*^9}}],

Cell[BoxData["0.0003863080243416972`"], "Output",
 CellChangeTimes->{3.638947661084453*^9, 3.63894775671507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Fonction", " ", "de", " ", "survie", " ", "pour", " ", 
    "diff\[EAcute]rente", " ", "param\[EAcute]trisations", " ", "comparaison",
     " ", "avec", " ", "Fourier"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DiscretePlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
           RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
            RowBox[{
            "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",",
              "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", 
            RowBox[{"1", "/", "10"}], ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[CapitalDelta]P(X>x)\>\"", ",", "24"}], "]"}], 
               ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Parametrization 1\>\"", ",", "24"}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"DiscretePlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
           RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
            RowBox[{
            "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",",
              "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", 
            RowBox[{"1", "/", "10"}], ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[CapitalDelta]P(X>x)\>\"", ",", "24"}], "]"}], 
               ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Parametrization 2\>\"", ",", "24"}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DiscretePlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
           RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
            RowBox[{
            "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",",
              "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", 
            RowBox[{"1", "/", "10"}], ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[CapitalDelta]P(X>x)\>\"", ",", "24"}], "]"}], 
               ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Parametrization 3\>\"", ",", "24"}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"DiscretePlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "-", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
           RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
            RowBox[{
            "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",",
              "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", 
            RowBox[{"1", "/", "10"}], ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[CapitalDelta]P(X>x)\>\"", ",", "24"}], "]"}], 
               ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Parametrization 4\>\"", ",", "24"}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.6386234702752132`*^9, 3.6386235303461123`*^9}, {
   3.638623941173156*^9, 3.638623972015963*^9}, {3.638624030404044*^9, 
   3.638624034386909*^9}, 3.6386265811274433`*^9, {3.638626691445384*^9, 
   3.638626705874661*^9}, {3.638628643950342*^9, 3.638628652313878*^9}, {
   3.6388510857982197`*^9, 3.63885109093149*^9}, {3.638851130249708*^9, 
   3.638851135317369*^9}, {3.63885645660028*^9, 3.638856460756331*^9}, {
   3.6388565245956173`*^9, 3.63885652977575*^9}, {3.638866622912547*^9, 
   3.638866667615942*^9}, {3.638947781057756*^9, 3.638947799060337*^9}, {
   3.638948066830369*^9, 3.638948096546082*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJw1l3k8VPv/x0elcqNQhMoSkZ2RfZnXzDCYJdFV0a6UW7bIkiIh5SYVqbSX
ElpwS7TbWgiVpL0rlZISob3r5/ed95lH/TGPOed5np/n533mDJ2AMJ/AoSwW
S2bw/5whLNbgP9benP9/XeAgKYf9dPlKrvR9Lad1xPkjxpEruVb/e93nRK+x
/16cwHz+mPPfhdDJwX+v5LL+92rlqHBvjlqwizn+FQeZrIJNR1dyl/3v1c6x
XCLq7TjDnN/B8dy5umPjpZXchvr/f33gFFeP3j7vFsPr5tw/eKAn9AFzfA9H
HFitebWN4fdySkeFmYm6mfP7OF3a8i7j/2Ou94Vz+0bpKl35YOJ943xJ+6sv
XCOYeN85j7Kdv7EMg4n3k3P9x+7zzbbBxPvFSTwVFP5REEy8/ziV8wJDxbMY
Hgu6Ku4yvYHM8Sz4Lh2V1BbF8GXgwrPxmZjKnD8EGbFqz47sYq43FOtbVLNW
n2B4w2C6or83u5zhDYOQM2XjiDqGJ4vpP8Y9rHvK8IbD+WZKysuPDG8E9jc+
Z0tYIcQbiS0H0zPHjA0h3kgEdC5caKQfQjw5uPm8X3TIPoR4f0C/5d2KcEkI
8UZB6W3+/EOLGZ48Tjtv0DeLZnjyODqVU6G5heEpIKlnv1XkYYY3GgafKnab
nmd4Y7DhyzXlGfUMTxEDWlOePGtjjldE2K/1Vi3fGb4iNNO/rXZRCqXzlRC8
vUNWzTCUrqeEHa0bFgZyQ4mnjLbuYAVD/1DiKeNbYNKZwMhQ4injskZC/6St
DG8sRupVFPx5guGNxbX5KvnyVQxvHKD69yuP5wxvHL70ui6T/87wxuHYoxAf
f5Uw4qmg4eOkV9bsMOKpYKTxvJCjXmHEU0VC1ZTFuSFhxFOFt77qjl+azHpV
YTc+vyn8JMMbjykLDCtdbzO88Rg93/b3pU6Gpwbbw9HuIcPDiaeGizXzZviM
DyeeGlJkxxRULltFPHXYmQ5e0iGceOoo0fx0R10cTjwN9O0SagYvYHgaGH/Q
9qzWKoangTWhN9VtU8KJNwEi0Z9953YzvAmYE+4zdP9JhjcR/21u1Pl0jeFN
xBTxW+uSZoY3EffbtazfdDC8SbjewZVkDDC8SdAxr/hepLKKeJrw/N5ULTFZ
RTxNeCSntK/gryKeJm57Z1xwlWV4WnB8421gEbmKeFpYONkq1o/N+Gnj05jN
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
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.1, 0},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalDelta]P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Parametrization 1\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0.1, 60.}, {-3.083274803596387*^11, 
        3.149459169983257*^11}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {307.2, -189.86004134396768`}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
iagegDnTqt5099F8og+YcdHUYfF8ef2yMGfIaYXl3VSfGiw4Fmgt8Qyk/mDA
gmaYYlr+Euon1iw0dZ4J6F3NJP9YuNhUvyBFP4D8YyEy4TEEB+X9nAUdyTRj
7yTq1zGsgfPVi9XhDHfyj4VDzwo9suY4k38srHs5eMK917bkHwv3qyY+PHeH
9oslLBiffjy0aZr8/MyCSmXcvzZ+euQfC8O9Nlxap6tJ/rEQkmJYG3pekfxj
IfuwZKr1sjc0bxm4nt+NcXO8LlTL/GPhV6lald/3t9Uy/1gIm3a/+dfSb7L5
at/A+7xRpz1FClQfbCgWi0Oj5inJ8lWDjYPc/ra9y5SpXgY+17ldbVKhLMtf
azasTjsW7HmlRPXDRpPZCYnnFkUZD2zEbNVaPa3hN63XbIxkh7UeufJdpi+G
jfSocKVZxV9k+iayUVOlWtAa3ifTl8PGUyvTs21H3srqo4CN61yX35LN3TJe
CRtr3gYzlY8+lfHK2dijvuNB6/gHMl4lGzsubs2rSLgr4x1jI3RLmLZ9RbOM
V8tGYfVJ8eiRt2m+yUZiyAIT63/ukX9sHPqp+L7G6CH5x8bQVVeLHq16Rv6x
8WuDUkzGmBdUvxw8nVzx+33pWxlPgwOe4q1tfs0fZDwDzsD+LOnR30s/y3jW
HNSa7TfUlcjn3RzsrlQ6cFfhl4wHDsId05alXVagfsRB7+fbeU+mKMniEcOB
z7DN4gPdFI+JHEywDVaY7DFYFo8cDjxfm4Q/lqhQv+IgSG95rL+bqoxXwoHj
k8Z9nG5aT8o5UHtWuTktV03Gq+TghEa/+5EuNepnHEScee12SzRExqvlwPRj
rua1w0Oov3Gwv//qsAZXdRmvbeDzF97Mmqfq1O84MH+1ep7G46EyXh8Hr75/
39jLGkb5x4W59/1kPYfhlH9cFAo5i363a1H+caH55866g4XalH9cZBuz2mo3
6VL+cZHZvbfsjrs+5R8XT3Rrz+yLMiT/uJjy6tXFdp3R5B8XldVJv6v9zMk/
Ltgz5v/IqrMk/7jY0ZRdunGXNfnHxc0HKRVHn9uRf1zsVUvZ+7RAPv/m4sCl
RuWv513JPy7aO1UPlb10J/+4mOHwWeUki+bjtVx47jITvKtnkH9cDPp+/S+D
qX7kHxe/Ffgxvr6B5B8X6rU5bQ0jQP5xoTQ1Oiv4L1rPFXgwStnePHw0zcM1
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
Ad69s7E=
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.1, 0},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalDelta]P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Parametrization 2\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0.1, 60.}, {-0.0043455132225322796`, 
        0.004519556284672084}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {921.5999999999999, -189.86004134396768`}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJw1mXlcjOv/xgtZK4WohEkqpH1f55qaZpoNLUq0b9r3hFaFRCRZU7ZIhVBI
QpKsZT2kbNmiYyll64R+fX99Zl7n/OHlmXfX837u+74+T1T9opwCh0tISEgO
/r94mITE4H8SBbv/96lhfmw/v/hzhgZz6M83mZ3y3lkCewOm4f9/HjK9rESG
+88a09+3MqM41kuqjUyYEv//aWc28Acm5jgZ0fVvmI/l2uYc26HHDPr/Twcz
/+Wfq3E/xPxO5uq9TWtszikwm5v+9/nE7HMZOPKnq+fSEK+b2RZzcOnBcYy6
oeu/Mrv6x7mO3qldN8TvZfbFNhQMMI3rhr7/jbnMrEUvWNuybujn/WBK+N26
e80QdUO8X0zrFGV2aaAt8fqY+sM8LkrOYBOvn2m1zXtrgKs98X4zw9MOnf4l
xSHeX+bCWKMkLS0O8SRQWByx2Pua+HoJiPrnSxW1sYkvCTlB1VFOhB19fxim
3zkZ1LyWRT9vOBLSJkk8XGJDvBFIeDicffS5GfFGIKu2d7nyMQPiSSHSam+/
2WVN4o3EjTfxDT0uE4g3ChOd1ac2XhpNz2M0ZBivpyZN1CC/o7FWYuT+ypmG
5H8MLsQcef+TbUnPZyzs5O9E55ax6PmNw9WNi8vn7rInnjRubIjudfHhEU8a
vi6zbx76JiSeDOTnuNVoz1pIPFkkPzG4f+mII/HG40KDy5b4ASfiyWGd74RH
hhoudL0cUmvXbvOesoj4cuh9cP/0yzuL6PvyeP3U/pwGz5V+njzef2gWmmS6
Em8C5tyWe3BwlSvxJiBk75X327VdiTcBn1prFe8ViHkTYRigXFVW70K8iXjm
Gv5ywkFn4k3ChIBNY/OtnIg3CemLJlVwty4k3iRcjLmt0sgTEU8Bh3Udvsz/
7EA8BYxmlCs8nMQm3mSkMrWvMzZbE28yhAWrHlVMMSDeZIx6eTdGyWcK8aag
sr1aMiFehZ7/FJw5Wb1iXKURrRdFJHZsqt65jEXrQRFafd1eW4470PpRRM0F
9TnHZRfS+lBCl6yigP2PM/GUoMtez+za50Y8Zfx7kiNdHrKUeMpYUB6XJz/H
m3jK2Oq1UVgd6ku8qejf8bLsiYE/8abixp4L8bofAoinAjnH6rUP1wYRTwVL
N2fzH44MJp4Kpn0vPaUTFEK8afjni/ahTXtDiTcNS1K6dKeVhxFvOt4YZVlL
Z4YTbzrmtZRwzGZFEG86nKUfM96tjyDeDOwo/f2LczSCeDMgFd0ZlJYZQTwG
fs47fPbraPH1DLxZ0W8QZCzmM2BYW1h7dGQYfZ+BJ7lhlbeSQujnMcDRzJIZ
2LyMeKqoOXzJ+L1+IPFU8bW0c4uMox/xVLHlmLB43wVP4qniv+Jmhaozi4in
itHzLI18PHnEm4mxk6ddKgzSIN5MfNRZ+fHmNSatn5nw2mGobvHImdbbTLzp
Ny04XelD62km0tJfhZXuCqb1p4aS3lf1h59H0/pSQ0hcwP5XPQnEU0NW4oeB
YdZJxFODalnm9ZUz0omnBs1lf46fN8gg3ixo9HsLP2zLJN4sjLQzLJilvIZ4
sxAT0XIwryaTeLMQmvqxcFVuBvFmYUyT8rj6R+nEU8dq56n5+8pTiKeOvbve
OQaUrySeOrp7TbTHKy4nnjqkko/8E6wTRzx1zKz+GSnsiSaeBpwmOZ5RWBFJ
PA1cnNXi/HNrGPE0UDlTZURASTDxNKBpZP3xlU0g8TSwVs1AoXKaL/E0IXOC
9WRd5mLiaUIiIARumQLiaSJwtvYo3gJ14mnC1HhcwbTnTHq+mjgqvVr+b5gj
Pd/ZCOqzlL9t5k7PdzYGriif7db1pvUyGzc3br7kVeNL62U2hPuceur1/Yk3
G4/W3IzI5Yj32xyUbOGkSdiJ198c+N/c2ywKFe+/OYjWVz7Q/mkZ8eYgOdMh
qOeVeD3PQWfIzPvjOeHEmwu3yocScn8jiTcXqzq82yu/RBNvLk7ceRk51y2W
eHNhlBCwgF0UR7y5eOx4bLpXWTzxtLBn1t8mVmgC8bRQuvyv9ZPHCcTTglpk
MbfoSwLxtOAs8fvf3nMJxNPCJ1X7zbvsEog3D0eWT+ek748n3jxcZWp9WvEm
jnjz8Fgg8bdlRhzx5qHuu6h6RVAs8eYhVj7S1/RqDPG0kRIVaDWcFUM8baiZ
5QhyXorvVxv+URot6UXRxNNGllyLFis+mnjaMI6TanvvHk08HTyYGpax2jaa
eDq4OFIrY6GqmKeDx6Vu8v0Po4ingz8bz06yUIsing5ca2zre6ZHEk8Xz5Kk
Ag1qw4mnC9PQiTGSPaHE04XVl5d2AQ3BxNOFjEOl4KNREPF00er9VNS50J94
etih21IXou4zdL2SHgqkPRkj1onXox5iO7ds0k10Gvq+UA/fPtatub1GPA/p
4dmaO6vTNfWGeOl6mF9lI/m2aDatfz2cKyxtcu+zG9ovVXpoHNsc86ZQ3J96
8FV8PC6wg/q6Qw/Wzvc1Le570H7TR7D1i9sZ2r5DPCV97Ggt26DV4E/7Tx/v
7u80/zAvaIgn1Mdrw8TU3VHBtB/1sf1TUZphXugQL10fexJkHex3hVM+fbQ9
7r6ftZHOhyp9bDA5Z1JrFk359PH9yQ32L80YyqePzvkS8j0KsZTPAAZqbKn0
EXGUzwApu70mVX+Lo3wGeKvHS7zdEU/5DLCiqC3iV6v4vDWA7Y+XUtFNyymf
AfSDbvIW1SZSPgPMdDEwazi4gvIZQLLtbMLrlJWUzwD9mZxHstxVlM8AHKMH
e6V/raJ8hlAJ+Kgo3EDnuZIhdDxzAs1+JlE+Q9xZah+5ySyZ8hki/LRwxwmH
ZMpniMP8744DM5MpnyGGPRxxYuZVcT8YYm7QcVfmXOJVGaL3HSOfsWgV5TPE
BT7bkcOh87vDEDVRMs1PJVZQPiN0NWTE7Mim81zJCLMgMkob9DUUzwjZbQ+F
5dPpfBca4cDPMP5rc3oeQUbYFCh1bFd6JOUzgm78Nv6U+FDKZ4Q9G61fPPQM
onxGKG1aN2mS0I/yGcHa0D+7eIcH5TNCp6Hmq0u3XSifMRz7dFxvbeZTPmPo
uP9tPOhkRvmM8cShImTpldG0P4zR/uzbrWpla9ofxghA40KP53zaH8ZIcpva
usJWPH8ZQyPvrXzijcVD+63KGGVTnkQYjPai/WqMnWoyny6s8R3idRiDX5hx
srlTvH9NkK7z7auXSRDtXxOMMLulcyo8mPavCQp+r707enMo5TPBhZU+H/YU
iOcbEyjEx87YkUfnS7oJXjz1E+4yE59vJuj55OwZMZXOwyoTJHQlva/uiqF8
JphdYpx9viqW8pnAYkxi8/HAOMpnips/Fj9sHx5P+UyhfMTxYEuO+Lw2Rayv
/PLAgXjKZwqrReYl9UvEfWCKFe+7rXfspfM+3RQdR/SujLot7gdTfB3fOuFs
O/VJlSnU5ezP/O/PQ/lMYfPw9NzsJuJ1mGKX6g2MLBH3hxlGn/2cIIginpIZ
xkx/WFU8V9xPZsj45nAssk2czwyanKOM0avjKd/g9zkM3kkG9Vu6Gd4+2hG9
vFbcN2ZYNlemTMM5jvKZYdHahQLLTnH/mOGKdV3tg1SxPzP4LXA8WTYplvKZ
48RfpT9KR2Monzlyhween2Yr7idzSBVO83Ntpf4RmsNlY27AlGhxv5jDantl
XpwU9VG6OWoeTLDbrSfuG3O8WTkFN+ZTv1eZw7l1VW+rn3ieNsfczSofzENp
vXSY45ow5+4qP/E8boFQj03cBB7N60oWEFwK/+U3TTzPW2CURBX7+7NllM8C
871zPwVliecRC8xp4zqtVwmkfBY4FX3d+Fqh+H3CAi8Und7MHeNH+SzA/+45
dYm/D+WzQE7b+Z7xSz0pnwXU+7l3Hv/jTvkscbpOYOxu4Ur5LLE2yKd8/1Yn
ymeJNJG5U8YtEeWzhJWHZ6UoXtxvlviXLRmxLpDez9MtMWxKRWudlh7lswTX
zdXM9f4wymeJ16OiH4S+VafzxRJ5XXIlv/aa0vliiSXzZC6k3GLR+WKFlFtC
u5U+XDpfrMAIzwvuyRbS+WIFU6s52a/3U18KrWDnMbL34BXx+6gVDFJji+eU
03mVboUAxfzAo4vF78dW2L/uQ8Gee250/lnhoLlTe5GCO+WzgoxeWk30vCWU
zwoFSV+e3ldeSvmskXuR1+Hxfinls4ajn7994G4PymeNusw/AU1mnpTPGuPn
zfv+T7Mn5bPG7D6b7G8+XpTPGh9eOKw/9J8X5Rv8/g9GkmGxN+WzxjntXV8F
+uL3F2vs+Xq8bOZ+H8pnjfYxiSkZquJ53AbaOyWmhpwTzwc2WFjr9M1zmR/l
s4H3+/TCQD1/ymcDpSQpyV+TAiifDcZ/FVb1KQRSPhtEn9rOPWcYRPlsIDM2
625nxDLKZ4MbVfd9TjQEUz4bSAUeWl9gGEr5bBATGxh/pjaM8jFx85tw1yb3
CMrHxP2Wz9kYG0X5mPhuW7fYPpDmDSET/71dcCVMIO43JhQvngwuM6Z5I52J
zSrRwX9Uad7YzUTFM1e4y1JfVjERME3uR9kvmjeamHheMELi1QuaNzqYSK1T
afx9ieYNCeD9SbeNcjsTh66XBp5kra4QBK6gvIASL6NvQJP6WwNI67ypcOT5
SsoPuCX+192xhuYNAGElq2W2qyTR/QAal8KunCumecEdKKtr8s1REs8XgGlt
nCAlJXmIFwfov2ZLad0VzxtAyHLZxYGyKUO8HIBhcX7fHMsUun8g95Kj075F
KUO8EuDNuf2dE73o/bEKWPlkm/CHS8oQ7zLA/BXect+CeE0AZ18+gydHvFbA
5l39YbnHlK8D+Nm1Kaozh/L1DvqZdeb5HmPKJ8GCwoUNB3vu0f1Ks2DgwJhy
1ls8b7HQKNz4+chrms80WDCVGuaTtmQV+WPB8NCRl++uryR/LKwPLXSN16L5
TshC1T/8HyfX0vNwZ+F1gkGxTEsi+WOhvtG5p2NGIvljYecRzsVMH/E8yYJK
To2Fwu4E8sfCkYuMouqb8eSPhXvxq2bH9cSRPxbKrlqetp5I82sVC9vL+pJ/
a9H6u8xCyCELl3VWMeSPhaXT5P8eZkeTPxZOWDPXmq+PJH8sPHE9DX5COPlj
YWNXzs9/F9A8LmGLmvp7V9ZOof0kbYvikbvdsm4Hkj9biNZ/nhUQ5k/+bKGW
/K9y0Q8f8meL4dMmYH0rvS/AFsFlu0ZL7HEjf7bIiax6N0PfifzZDvpOKjE3
5ZE/Wwy4b8oqDLEkf7aI6TyaefmMDPmzhUIXV7ii1GioH3JssUy9xnvbEw6d
/7ZYNbmnur3FcagvSmyhqrw/sjxMPM/ZQvuuN09Pw3uoPy7bosfJQPXlMPH7
++D9YnKy4Rqa31ptUbcq78vwyfQ+12EL/zuJCprV9PupXlukq9UP6FSJ3y/t
UJjVn6mVR/OEtB2EBmNdnsSL5y073EmdbJLquXyIp2GHGe233vnwV1D/2SG/
eOHayxarhniwQ6yO0Yc27WTqQzuEuD549mlm6hDP3Q5RV6UO7ZZOp360Q2SE
q+KPUauHeHF2aL6W26w1PIP60g7yWrGMZ38yyJ8dxpmHyJf/zCR/dniT/N9y
i+415M8OBw68nmL0fi35s4OmXNw55rN15M8OdYWjxoy+m0X+7BC/6+Za87r1
5M8OXrrLeBnHssmfHQbqVRrydmwgf3aYnCXnq5iykfyxMcdZYHXdO4f8sfHy
ZUHxAptN5I+NeV7aZX6Km8kfG7Y5MadOft5M/tj42a/1+cPFXPLHhmvI2xgP
9hbyx0bDWan+dyVbyB8bBX2H4wNH5pE/NjaVfblw3C+P/LGhp/bwv9zaPPLH
Rrb8sKinclvJHxuXZ4a5ePptJX9sNFWGX2w/sZX8sbG0/kyaTt9W8sfGRidL
LRmbfPI3+PeSx0awUvPJHxu1Bx5PzKnJJ39sqM8+rFvRlU/+2JCRsFINZGwj
f2xckyy6FS7YRv7sEV4avTgtehv5s8clhmz6otxt5M8em08faiw5so382eOw
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
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.1, 0},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalDelta]P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Parametrization 3\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0.1, 60.}, {-0.2645696432126196, 0.07139213167524931}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {307.2, -569.5801240319031}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
HGbGp31GCP+soKIdxqd9RlB+v15O4Syf9hnhylCt7lv9fNo3eF5jwUpPYwHt
M4L7eBebq2EC2meERD9FiwnnBbTPCPoNCm4u3wS0zwg+H07Y7rQT0j4jtBvs
GlsdI6R9xhAxxVK/6oS0zxjGmlVaPHkR7TPGwtI/2gWeItpnDGZ61RDFPBHt
M8YMGf1/c9+IaJ8xJopXlNpYimmfMTKnRJ57tV1M+4zh1Gb8tvCemPYZoz9c
nBOk5kT7jDF9nUqUzhon2meC+9+3axV/oN4UE3Qfznum4eBE+0wg3luXNyRw
Lu0zQd+/3fHelXNpnwlcTtyJujbCmfaZwC77Hd/eyJn2meDN9ddOKt7OtM8E
o1NG1PvGO9M+E9zOP3lapsyZ9pkg2G/Ntemd1JMyBTfbPDZvjAvtM4Vtb/+L
A9epZ2KK2Lc987reU09kir2R3WumpLnQPlO8Pzra7vRVF9pnirI/0i+f9lMv
0xSn3QT61WqutM8UHrY6QU6urrTPFIofp87LinWlfabIfW32T3G5K+0zw7uj
T7wTXrjSPjMoNPhs23KQeiZm2B1zT7PO2Y32mcE7t7vecIcb7TODs5/G6O0W
brTPDHGuZvMKPrrRPjOMOq+jWq47j/aZ4bC7VMCJgHm0zww5psNtduTOo31m
cFUd8oT/aB7tM4fGzFNe73fMo33m2F6rbb3XZT7tM0dnlOqVSXvn0z5zyLPY
rcXW82mfOWpWfn3wQ9ad9pkj/rlnQYDYnfaZQ0cu/lPjHnfaZ46hyxuH2De5
0z5zaPJnbLik4EH7zPEm4x3EXh60zwJX8uD+PdeD9llgGOd+Zn2vB+2zwFt1
FNboe9I+C7yJ0DnxItKT9lmAcfctn13jSfsskBHzdNcjWS/aZ4GTy52vlnh5
0T4LyFRtzqk55kX7LMBXSJgx7asX7bPAjt7EikvcBbTPEkzrC54FmQtonyUG
Lo5JibBYQPssoemZ1O7FXEj7LFG0XUWB92QB7bNEm+vkCtbbhbTPEnE7fy0p
dfSmfZZYNj8wNvSwN+2zRPcdmZLYH960zxJlKg8mv/dYRPsswR2ZWnahfBHt
s0LGanPzpwo+tM8K+w7kK6+N8KF9VphhfLpk1QMf2meFnv/6XnVYL6Z9VmjS
yk9oOLSY9llh5LOMs5sMFtM+K0TnPPx4cd9i2meF241nt/cE+9I+K8wrrq7Z
dMSX9lmB5xgsfPHAl/ZZo8fAuFd/nB/ts8aa3VZMF64f7bNGCzur3z3aj/ZZ
o3XDsoWsi360zxqb5JqKp372o33WePKy7G6XoT/tG/xc+CgkM8Sf9lnjbPCQ
Z9xif9pnjZzjzY7vXvrTPmsc5x8MSNVeQvtskFnf3mCyYgnts8GYhmcGzlpL
aJ8NZOqH7d/4dgnts8Hdc7Wa6sYBtM8GFQ0Va1siA2ifDaRGxy1PqgqgfTYI
9VoyzGXoUtpnA4X2eD814VLaZwPT2o5bUmlLaZ8N1gbsbOp/spT22eLZ6iq3
r7MDaZ8tso2O71eICKR9tkhfuWj198Hzf/fZQnNRSFmB/DLaZ4uBqy+iZvou
o322iKhN/1VXuoz22cIm5Y/ioSHLaZ8tvin5iIvnL6d9tjDbbFD56fhy2meL
9sxR8rF/ltM+O4wd/FH4uAfRPjs8lVkRkCgdRPvs4Py4W11t1AraZ4dTbYXC
aUtW0D47sCaeaNtZvYL22WF8uLR/uEow7bND/U1m5YvNwbTPDuWFWmdNZwbT
PjsEKkQaHMBK2mcH/bf2VS+PrqR99hB+C2t5LxNC++yxxPXo4QtrQ2ifPZKn
H9EQPQ6hffYYMg2aFzaF0D57dCYMLJQuX0X77NEkG9FpoR5K++wx5vrB4iXp
obTPHv7SMbO5w1bTPnsEBU+I7rJfTfvssb5xBjtm42rax8Bthd0lhhWraR8D
xkfOXnv3aTXtY2BHpPSKayZraB8DM2NvLDgdtob2MbBqr9KQULs1tI+BmHrD
8I4va2gfAwcenEubbb2W9jEwJ+zNnwNb1tI+BpJG580yub6W9jEQcb1s/XeZ
MNoHND6vTvzgGvb3ellgp08cb6hSGO0Fuu2S6mP7wv7erwk0HNjfoG4cTvsB
FYPdohFbw2soh5L4lka9xnB6H+DbJ3+FHOWIvz0v4G3JahPvkAh6P6BCTyc5
tDriby8M2LbBtvfxhEh6X2CD7OtdWb8j//YSB/c5h0zr+CeS3h+ouoOWHxsi
//YKAcebI9LTVq0jD+BrZ1etRv26v70rgODs4x3WGuvJB+B5il60xaz/23sE
LHoUzBv3dD15AWnFMvwuhw1/ex+BH8b3GtwLNpAfEwNJc55vGr2R/Jh4+Uzt
lWfoRvJjojPuu/Dr/Y3kx8SJTF6xLzaRHxNynhXSowI3kx8TqxUmbbiktJn8
mPh9Iuv1J24U+TExZXh5Re+lKPJj4oPgcH1JcBT5MfGYc6P5WFcU+Q3e/3jP
JhX1reTHRNxvTnrbv1vIj4lyI78jW8dFkx8T76Tz9PPqt5IfEx/LXt9fmRJN
fkxc/jBUULQ0mvyYMD8zIkNKaRv5MbGwdpyV8mvq9TGxb92B4blztpEfE3MP
v/318dU28nPA/RcC+ZsmMeTngH7GU/dnUTHk54AJ2ywOSTnFkJ8D9CNCt986
EEN+Dnid+vPni2cx5OeAmTNOPfExjiU/B1RMYimbbIslPwc0a7reC26KJT8H
WK4ehXGztpOfA9jxP9x+/tlOfg5IWtzLb3kaR34O0CnYmyp/Oo78HDA24dGA
YH0c+TngZcPJ08ua4sjPAaez9giV9HaQnwM+hkVOMlKNJz8HaMiI1DKj48nP
Af79Vm/+48STnwOOp0al2RyLJz+Hwf8HPll711JPioWa+QObJ4TuJD8WVNfI
KJ9s3Ul+LIRHHY0Zl7aT/Fjo95cpCinaRX4sHBJO1y9USCA/FjzN3M0t/t1F
fizkFx0p+fohgfxY8H4U+DO9JIH8WCh9YnTnmspu8mMhxudj+YW5ieTHwryJ
gjNOIxLJjwWddemu3Q5J5MdCeZxv86KvieTHQrvn8hyjsCTyY+HYmoFax/4k
8mOh7ICMhoi9l/xYuHkz4qffpz3kx4Jj+5bhedrJ5MeC8yzjd7ahyeTHQmDf
vXcq55PJj438sjMs4e9k8mPjyPfeYrOqFPJj41yX9qqjqSnkx0bWBl/zDYEp
5MeGwUzD82PPppAfGzd0LtmNHUglPzaSRXNeytxOJT82pjYqG97L3Ud+bHBk
J7yMX7OP/NhYHDchM7V2H/mxIXbRsjHWSyc/NvYvrWcvi0gjPzb+8GUt8p+n
kx8bSR8nV9bqpJMfG7M8KqzGTtlPfmyEPLCP/txHvduDnxe7jGh4sp/82Khq
22xoe2I/+bFxeNhWn8NyGeTHhsyGpH+eh2eQHweXC2MLlZ9kkB8He2UWXuFz
D5AfB/xdA+ynXpnkx0HZwM+ikbcyyY+DO0Mq9jf2HiA/DlRjvRkPyrLIj4NP
TTX2WboHyY+DtiN+GYbvs8iPg/HBv2cpzswmPw5yvW43vz6cTX4cfI+9uP+7
fzb5cRA+O9g3qCeb/DhAaVHigsAc8uPAU29Ba2h5Lvlx8Nl/y6zfYbnkx0F/
b7frnd+55MeBwZGuIO/EQ+THwRXlFz8Xyh0mPw4e6tasGPA4TH4c7MzSjB+T
f5j8HLFFZXFzud8R8nPEhZhNMeftjpCfI3buuTtkcdIR8nPEoqlR6wLu5pGf
IzTi5i2ONsojP0es03/c0jIkn/wcsa8wuXr+wnzyG7x/uNY0O9N88nPEMVuB
lI1MPvk5IiG3XeC1JJ/8HCHvl96By9RLdMT12oqc71OPkp8j1ApHBluNLCA/
R9y6W+qx73sB+Tmiv3SavdC/kPwc4V28a9Jq80Lyc0SJ5pWi5EOF5OeIaSMK
NJNCC8nPEeZOuv8NayskP0e4TsgqzX9+jPy44JU1vHUpP0Z+XCibyxuqbz1G
flx4jHnmrf3uGPlxMeWoaoBq1XHy40K20Uj9YWsR+XHxOdh/0tJzJ8iPC5ua
A9/0TYvJj4tHoxJHyDNPkB8Xtwz7brBsSsiPC9E4N36fVAn5cTGnaKZRb00x
+XHRptAtp88tIT8u2D99tHsPniQ/Ln7sjTmVf+s0+XFR1vi13tG4lPy4SHh2
eVzcm1Ly4+Lojp56vl8p+XHhY+NgoldaSn5cMF0mnRu1p5T8uKg7kP6++Qn1
pHjwGKY3/6PyWfLjYW+2vpZczBny4+Ef64SPiffPkB8PnJRlp1eeOEt+PDAO
Dt3jOews+fGwxXJj9qcn1BPxEN80PVXv3Fny48FEQRyrt7+M/Hh42ry5p3dF
Gfnx4K6kN5thW0Z+PISZJLY2zT5HfjwckJngkZZwjvx4YIU7GvUrnic/HqYV
ty22rzpHfjx0f/pVMM39PPnxID/AGcPVOE9+PBQ0B6sopZwnPx6yVp9sysir
ID8e7t645WkbWkF+PEQ3tu/ZvPsC+fHxel5cXXxpJfnxUbz18Up7g4vkx0c3
soOGcCvJj49RVk+7jTZeJD8+Tipbn+o/f4n8+Ii1cM/a+auK/Pioe7MzleF0
mfz4yFhi8TA7tYr8+HDKeKRSPuMf8uODp+Cxef7TKvLj43vXag//Nf+QHx8e
jWmvgodSL5OP/IOuA9mpV8iPj3t2dyZwRl4hPz7WBinb696uJj8+bk2S/S/U
7Ar58aE6TDFl3Y4r5MdHi3OI3QiXGvIbfJ+aaT3n9WvIjw+3rtbiGVFXyU+A
2I9fjmi1XSU/ATiPi7eVXLxGfgIE9KgGmmddIz8BVIdHNR+PvEZ+AtxO/rQj
xf86+QnQmcq606RxjfwEGPxVTrt+9Dr5CXD1VvgobaNa8hNgdJ2C8tmxteQn
QLFJmmdV3w3yE4C5y7uizL2W/ATY7sMvWKlbS34CZH4u0KvouEl+AkyPPDCF
71VHfgL439qyvTX+JvkJMPKN6sSzxXXkJ4BYbePP0Y/qyU+AI5t655j9qCM/
ASziY37d62sgPwEMZrSYz6lsID8hTJb3VJaybpGfENltLh26TbfIT4gPaTMi
xmk2kp8Quz+zW4v/aSQ/IZb9t8H4RPVt8hOizvzR6gtf7pCfEEmdVfOqpzSS
nxC+H/W5HxPukJ8QHu2jZI/p3CW/wd6jUsvaxrvkN3j+07gMI+t/yU8Ixhbr
hTLDm8hPiBu6SrVeP6hXKITipBc/Xa7/S35CPO/MmHMos4n8Bq8XHBxm9aWJ
/ISoWDlUTdGZeo+EqI5oDPM2vEd+Qki3VaaPU2omv0GfQwk2ycqt5CeC1Lxz
D5zcm8lPhHyhc3dqSCv5iRAe2yLaI2wlPxEmrj28J8/1PvmJMMvnopWH/wPy
E6G+0j/36Z0W8hPBxqVTycKOel4i3F+4Z9+iT/fJT4Rds60ssm9SL0yEFS0P
7XJBvWgRtBu7fZuCHpKfCB93CjPWWj8kPxG8ffbt3jziIfmJsEj9K0MuqJ38
RLjam6egFNNGfiJcyoiI4iQ/Jj8RFBeu9N1+poP8RBAPHeNqbvKY/ETQDz46
tLn+MfmJsDy3Rangfif5icFYxu1aiy7yE0PF1bbIeVg3+Ynxsqj/9NhtXeQn
xrLZAeZflnWRnxj7tf/822jSTX5ihCg+PXU4pJP8xDBu5BnpjukiPzF+cEe7
LmjuJj8xXj948bm/pIf8xPBfUnlzYvpT8hOjZVzm2KI/PeQnxvcsz5+R63rJ
TwxHzpOd1272kJ8Yj8dP21jR2kt+YtzqtY5tl39GfmKMeaPoO+16H/mJUSd3
+dTJSX3kJ0YOQ8X6yfaX5CdGh1Vl8IOHL8hPDFs33S9pMr3k54RdX7Q6tfyf
1/wff1q5Ig==
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.1, -3.4251022889140153`*^9},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalDelta]P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Parametrization 4\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0.1, 
        60.}, {-3.4251022889140153`*^9, -1.3125058896323964`*^6}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {921.5999999999999, -569.5801240319031}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}}, {}},
  ContentSelectable->True,
  ImageSize->{1240.8, 771.4401653758707},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.638853688888351*^9, 3.638853866950036*^9, 3.638855769129052*^9, 
   3.638856352280168*^9, {3.638856510070122*^9, 3.638856535240945*^9}, 
   3.6388667135466223`*^9, 3.6389478433531523`*^9, 3.638948134799856*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.638677497182273*^9, 3.638677534815893*^9}, {
   3.638677582094776*^9, 3.6386776470722713`*^9}, 3.638677686345913*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Tableau", " ", "fonction", " ", "de", " ", "survie", " ", "et", " ", 
    "erreur", " ", "relative", " ", "sur", " ", "la", " ", "fonction", " ", 
    "de", " ", "survie", " ", "pour", " ", "diff\[EAcute]rentes", " ", 
    "param\[EAcute]trisation", " ", "du", " ", "d\[EAcute]veloppement", " ", 
    "polynomiale"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Fonction", " ", "de", " ", "survie"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "[", "k", "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
         RowBox[{
         "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", ",", 
          "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/.", 
         RowBox[{"u", "\[Rule]", "k"}]}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "/.", 
         RowBox[{"u", "\[Rule]", "k"}]}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/.", 
         RowBox[{"u", "\[Rule]", "k"}]}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "/.", 
         RowBox[{"u", "\[Rule]", "k"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"umax", "/", "10"}], ",", "umax", ",", 
       RowBox[{"umax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.638948598551817*^9, {3.6389486374849367`*^9, 3.638948642019878*^9}, {
   3.6389487758355703`*^9, 3.638948776212634*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccccc}
 6. & 0.811227 & 1.36315\\times 10^7 & 0.811507 & 0.810796205618057 & \
-1.24518\\times 10^6 \\\\
 12. & 0.56834 & 1.46801\\times 10^7 & 0.567072 & 0.567464666324267 & \
-1.24518\\times 10^6 \\\\
 18. & 0.34191 & 9.43718\\times 10^6 & 0.341587 & 0.3434973122267232 & \
-1.24518\\times 10^6 \\\\
 24. & 0.17857 & 1.04858\\times 10^7 & 0.178539 & 0.1776357763563670 & \
-1.24518\\times 10^6 \\\\
 30. & 0.081776 & 1.15343\\times 10^7 & 0.0816851 & 0.0819529359662154 & \
-1.24518\\times 10^6 \\\\
 36. & 0.033478 & 5.24288\\times 10^6 & 0.0334768 & 0.03357644909155546 & \
-1.27795\\times 10^6 \\\\
 42. & 0.0124404 & 1.57286\\times 10^7 & 0.0124332 & 0.01219211758603841 & \
-1.24518\\times 10^6 \\\\
 48. & 0.00420535 & 2.09715\\times 10^6 & 0.00421571 & 0.00433441587318858 & \
-1.27795\\times 10^6 \\\\
 54. & 0.00132527 & 4.29916\\times 10^7 & 0.00132356 & 0.001403475357017921 & \
-1.21242\\times 10^6 \\\\
 60. & 0.000386308 & -8.38861\\times 10^6 & 0.000384629 & \
0.000284102648171442 & -1.21242\\times 10^6 \\\\
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.6389487773840427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Erreur", " ", "relative"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "[", "k", "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"u", "\[Rule]", "k"}]}], "]"}], "-", 
              RowBox[{"N", "[", 
               RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
                RowBox[{
                "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
                 ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], ")"}], 
            "/", 
            RowBox[{"N", "[", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], "*", "100", 
           "*", 
           RowBox[{"10", "^", "5"}]}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "5"}]}]}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"u", "\[Rule]", "k"}]}], "]"}], "-", 
              RowBox[{"N", "[", 
               RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
                RowBox[{
                "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
                 ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], ")"}], 
            "/", 
            RowBox[{"N", "[", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], "*", "100", 
           "*", 
           RowBox[{"10", "^", "5"}]}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "5"}]}]}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"u", "\[Rule]", "k"}]}], "]"}], "-", 
              RowBox[{"N", "[", 
               RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
                RowBox[{
                "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
                 ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], ")"}], 
            "/", 
            RowBox[{"N", "[", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], "*", "100", 
           "*", 
           RowBox[{"10", "^", "5"}]}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "5"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "/.", 
                RowBox[{"u", "\[Rule]", "k"}]}], "]"}], "-", 
              RowBox[{"N", "[", 
               RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
                RowBox[{
                "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
                 ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], ")"}], 
            "/", 
            RowBox[{"N", "[", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], "*", "100", 
           "*", 
           RowBox[{"10", "^", "5"}]}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "5"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"umax", "/", "10"}], ",", "umax", ",", 
       RowBox[{"umax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638948668773789*^9, 3.638948703957408*^9}, {
  3.638948766965191*^9, 3.6389488301923637`*^9}}],

Cell["\<\
\\left(
\\begin{array}{ccccc}
 6. & 1.68035\\times 10^9 & 0.03449 & -0.05311 & -1.53494\\times 10^8 \\\\
 12. & 2.58297\\times 10^9 & -0.2231 & -0.15394 & -2.19092\\times 10^8 \\\\
 18. & 2.76014\\times 10^9 & -0.09454 & 0.4643 & -3.64185\\times 10^8 \\\\
 24. & 5.87206\\times 10^9 & -0.01759 & -0.52331 & -6.97308\\times 10^8 \\\\
 30. & 1.41048\\times 10^{10} & -0.11119 & 0.21631 & -1.52268\\times 10^9 \
\\\\
 36. & 1.56607\\times 10^{10} & -0.00353 & 0.29409 & -3.81729\\times 10^9 \
\\\\
 42. & 1.26432\\times 10^{11} & -0.05834 & -1.99604 & -1.00092\\times 10^{10} \
\\\\
 48. & 4.98687\\times 10^{10} & 0.24625 & 3.06909 & -3.03887\\times 10^{10} \
\\\\
 54. & 3.24398\\times 10^{12} & -0.1292 & 5.90079 & -9.14842\\times 10^{10} \
\\\\
 60. & -2.17148\\times 10^{12} & -0.43455 & -26.457 & -3.13847\\times 10^{11} \
\\\\
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{{3.638948761916383*^9, 3.638948787675358*^9}, {
  3.638948820554393*^9, 3.638948831870204*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Comparaison", " ", "de", " ", 
    RowBox[{"l", "'"}], "erreur", " ", "sur", " ", "la", " ", "fonction", " ",
     "de", " ", "survie", " ", "avec", " ", 
    RowBox[{"d", "'"}], "autres", " ", "m\[EAcute]thodes"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DiscretePlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
             RowBox[{
             "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", 
              ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
          RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
           RowBox[{
           "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",", 
            "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", 
           RowBox[{"1", "/", "10"}], ",", "umax", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"Filling", "\[Rule]", "None"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[CapitalDelta]P(X>x)\>\"", ",", "24"}], "]"}], 
              ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Polynomial\>\"", ",", "24"}], "]"}]}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DiscretePlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"SurvivalCompoundPoissonUnifMnats", "[", 
             RowBox[{
             "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", 
              "\[Alpha]Mnats", ",", "bMnats", ",", "u"}], "]"}], "-", 
            RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
             RowBox[{
             "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", 
              ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
          RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
           RowBox[{
           "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",", 
            "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", 
           RowBox[{"1", "/", "10"}], ",", "umax", ",", 
           RowBox[{"1", "/", "10"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"Filling", "\[Rule]", "None"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[CapitalDelta]P(X>x)\>\"", ",", "24"}], "]"}], 
              ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Exponential Moments\>\"", ",", "24"}], "]"}]}], 
             "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"DiscretePlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"SurvivalPoissonCompoundUnifPanger", "[", 
            RowBox[{"VectProbaCompoundPoisson", ",", "h", ",", "u"}], "]"}], 
           "-", 
           RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
            RowBox[{
            "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",",
              "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
         RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
          RowBox[{
          "mFFT", ",", "bFFT", ",", "u", ",", "nFFT", ",", "\[Lambda]", ",", 
           "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"1", "/", "10"}], ",", "umax", ",", 
          RowBox[{"1", "/", "10"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"Filling", "\[Rule]", "None"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[CapitalDelta]P(X>x)\>\"", ",", "24"}], "]"}], 
             ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Panjer\>\"", ",", "24"}], "]"}]}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.638628568108457*^9, 3.638628628091324*^9}, {
  3.6386287497928667`*^9, 3.638628770584075*^9}, {3.638948107985429*^9, 
  3.638948133200819*^9}, {3.638949280110023*^9, 3.6389492846676598`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
iagegDnTqt5099F8og+YcdHUYfF8ef2yMGfIaYXl3VSfGiw4Fmgt8Qyk/mDA
gmaYYlr+Euon1iw0dZ4J6F3NJP9YuNhUvyBFP4D8YyEy4TEEB+X9nAUdyTRj
7yTq1zGsgfPVi9XhDHfyj4VDzwo9suY4k38srHs5eMK917bkHwv3qyY+PHeH
9oslLBiffjy0aZr8/MyCSmXcvzZ+euQfC8O9Nlxap6tJ/rEQkmJYG3pekfxj
IfuwZKr1sjc0bxm4nt+NcXO8LlTL/GPhV6lald/3t9Uy/1gIm3a/+dfSb7L5
at/A+7xRpz1FClQfbCgWi0Oj5inJ8lWDjYPc/ra9y5SpXgY+17ldbVKhLMtf
azasTjsW7HmlRPXDRpPZCYnnFkUZD2zEbNVaPa3hN63XbIxkh7UeufJdpi+G
jfSocKVZxV9k+iayUVOlWtAa3ifTl8PGUyvTs21H3srqo4CN61yX35LN3TJe
CRtr3gYzlY8+lfHK2dijvuNB6/gHMl4lGzsubs2rSLgr4x1jI3RLmLZ9RbOM
V8tGYfVJ8eiRt2m+yUZiyAIT63/ukX9sHPqp+L7G6CH5x8bQVVeLHq16Rv6x
8WuDUkzGmBdUvxw8nVzx+33pWxlPgwOe4q1tfs0fZDwDzsD+LOnR30s/y3jW
HNSa7TfUlcjn3RzsrlQ6cFfhl4wHDsId05alXVagfsRB7+fbeU+mKMniEcOB
z7DN4gPdFI+JHEywDVaY7DFYFo8cDjxfm4Q/lqhQv+IgSG95rL+bqoxXwoHj
k8Z9nG5aT8o5UHtWuTktV03Gq+TghEa/+5EuNepnHEScee12SzRExqvlwPRj
rua1w0Oov3Gwv//qsAZXdRmvbeDzF97Mmqfq1O84MH+1ep7G46EyXh8Hr75/
39jLGkb5x4W59/1kPYfhlH9cFAo5i363a1H+caH55866g4XalH9cZBuz2mo3
6VL+cZHZvbfsjrs+5R8XT3Rrz+yLMiT/uJjy6tXFdp3R5B8XldVJv6v9zMk/
Ltgz5v/IqrMk/7jY0ZRdunGXNfnHxc0HKRVHn9uRf1zsVUvZ+7RAPv/m4sCl
RuWv513JPy7aO1UPlb10J/+4mOHwWeUki+bjtVx47jITvKtnkH9cDPp+/S+D
qX7kHxe/Ffgxvr6B5B8X6rU5bQ0jQP5xoTQ1Oiv4L1rPFXgwStnePHw0zcM1
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
Ad69s7E=
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.1, 0},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalDelta]P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Polynomial\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0.1, 60.}, {-0.0043455132225322796`, 
        0.004519556284672084}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {307.2, -189.86004134396768`}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJw113dczf3/x/EmIi1JaWgv2qc9zrM6u04qkkJSSkLKTIlSychsiOwSFXKF
SJSMsmXTtqMIIYR+ft/zOt2u64/r1jnPHp/75/M+delFLAyMkpaQkJD89+9U
KQmJf/9I7Nr5/1/VTNPsRTr9obF1ov++zjx0b/vgyZmhdXb/+3rA/La4LTm1
aQl9/xnzc2XGxKwR8+sk/vfVyYw4Pqp04oLp9PqXzKykqQ7ut5bVRf/v6w2z
rWinTnPQQnr/O+ayTG35e03hdbdv/f9XDzM33Ndjp6c17X1iHrpw/EQBfxG9
/jOzUj3GPC04ivb7mOnlB5M+T+LS+78y73RvSixXE/+870xtVp9LIkPc94Op
M2+2/IkXwbT3kyl4ZfFGJiCZ9gaYZdw/JrVfFtHeb+a7nkf2yi2zae8vU0Ou
cnf5cDfak0DhDv8JAakr6PUSuCjc7D8hN572JbHa6cXiEz9n0PulEBzdrTJP
IY1+njS0A4TGeQ2JtCeDpOpjksHr42hPBk3DM0dIhUyhPVmk73AoXns2jfaG
gNFVn/Ny9QraGwq3w+53pS7G0d4wnFKbHPbKczLtDUNHZc7KopB02pPDttqh
lkPGraS94fgbFWBdMzWB9kZATTcwJj0lhPbk8S0w6XOG81rak0dOa274yZ2p
tDcS5YrxfN3apbSngLD21TKWhrNpTxFuVa5Wqf9toD0l6Nbd7Wo9k0GvV8Kn
k6Vv3nml0L4Sflgf2DepJZ7er4z2uqDMy+3+9POUUV4xdFJPi3hPBWbWDad2
Ron3VKBwb3lp3L5k2lPB2Uk5Td7R82lvFJQv7Nh3t2Eb7Y3Ci08b69NOZtOe
Kp69sy5KOpNJe6ponudQnmEj7lNFvuvU9RNCF9DeaMjPD92dp55Le6MR9jk5
7XTUVtpTg7bBtfZQrKc9NVj8yl6jtiWN9tRwXfbYntkLFtPeGCTp5GieiPSh
vTH4M3orK6A/h/bUETFS5735zS20p45cd4eCzSlZtKcOfvW0xSlyq2hPA/Zb
rGZvWjWX9jSweSQ2FPrtpL2xmLLvd2l7dy7tjcXS3wqXniZspb2x8OfM/9JS
l0V7muj4q76p79FK2tPEpe5zA282R9KeFh7V7o6w9t5Ne1o4kRMWZ5awg/a0
MPbFPa/jGdtpTxt7Vg7clP61gfa0ceWFY1lZZSrt6aD3S+ejyoYY2tPBx5yn
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
JvbfW1D8hPqc8ZRV1HfpwlPqc0Zi8tdMj5Zn1OeMnYUmA19/N1OfM0Zbnbv0
W7+V+pzR1N5/KnZ4GZ1fZyQ5ah5d3VlE59cZPCPViSruhXR+nWG65u7zTsVN
9Pw541bBCkbG0FB6/lyQu9i/9uPXtdTnAq9809UD1wuozwWeSzUbck3oefF1
wff81YZrZcuozwXaS/uFR1bT85LqguesypLTw0+RnwtCwzZn6hefIT8X7CwN
GdTzFZ9fFwwbkf3ghVQd+bngMUfjJnd2Pfm54luewprDfpepzxWPrxgxD+Iq
9bnC5NLRyTyXRupzxcL6JLVS1+vU54q338y5D1g3qc8Vt6Nktj4Kuk19rlim
+EOiLu4u9bnCuzX/xt3GJupzRWnr6ems1nvU54qJRyK7Gr7epz432N6KDI1Q
fkh9bmh83KVmYPuI+twQJ7fZekzwY+pzg1XX+QK/1CfU54bAiXN4LceeUp8b
IlM1w+91PKM+N6T+3erBVWuhPjf4HOZtCgpopT43+Ffd8RqzrY363HBqbfqu
0kft1OeOWR9UJPMVO6nPHbfbj/7tqOqkPnfoX5BOvRL+nPrccfqYrO6UkS+o
zx1/Pl5hHjn/gvrc0e+/vOtO3Evqc4er9aeydoNX1OeObPW5KT0tr6jPHYrz
TQpG7nhNfe6wuiIVGBz0hvo8UFoe/add7S31eaBbt6ShuuUt9Xmgc2NE7u+i
LurzwMyDJe9rFr6jPg+ozkq4N4L5nvo8ILHYtG5QuZv6PFCxaklWWVc39Xkg
vPidn87lHurzgL5hQ/r8Ax+ozwNe4161HEr/SH1MhFz/Edw8t5f6mFi1XK5E
3vwT9TGxo21TldOBT9THhLp5QULi2M/Ux8R6F/0T9/M+Ux8TW3bM0fYb9YX6
mGjT62B/3v6F+pgIXpN/+JJqH/UxsTc69/K1gj7qY/77fDf89KiX/l6TAFT7
lO821x4RvV4e+OE23aw8+AT1An3K2bOfhZ8Svd8YYGUwXlsl0+9TO2D6kh9b
35WcZ9IcclXnxugvukjXAzyYmd1fv5N+f4YA/LjLJ5fduELXB6yx+jYqWqZR
tLcY0B92ufMMlz6fUwGJkIOs/Nybor1swNbV7qFFt/j8AV0Oio2PjejzuAQY
anpkrsG0e+QBLGj6VZ6fR+ftImBz7NVan0cPyAcY2GgqEzb2kWjvGdA209yy
e/Zj8gKeXIn+o3T6iWiv79/367ezPg5/Rn6ekP5vReHB6Gby80TOmWS+37UW
8vPE+o/NVirWdL6MPeHRve+U4t528vPEWJ5pMEOuk/w8YXt8y5F9DZ3k54m3
kx8qTMt6Tn6eOJT1rWu5j/h8ecJX3fP40FEvyc8TqVWCd5rtL8nPE1pdloyG
o3Sesj2h8CfAQX31a/LzxH8B+UUG/86TyM8TSw4ouf+ypPNz0hODx6QeHJPv
Ij9PdL9exPP/SOfpliccr7Xv6Hvwjvw8EfTZ+Vnphffk54kpqSr8zHI6P32e
qHi80L9gTw/5eeHW/cZN33I+kJ8XjkQtaK/Y/JH8vBD8cnNM86Ze8vPCz6Hn
A6/wxOfHCw/VFB3e3vpEfl4o4zT+mTnpM/l5waO+QMq59TP5eSHicnzLyjlf
yM8LVzY6Rzh8o/Oz2At3l4acjc/sIz8vbFr5TOCo/pX8vLDQz+Jx3rGv5OeF
7QZb5xawv5GfFzQc2+b6dH4jPy8wQobm1qR8Jz8vTNMcMvhNu5/8vNDCYGsP
q+8nv38/T+bYhcHoH+T376/X/Wry3Yo/yc8LvdGrtz2t+Ul+3jgRVm73JPYX
+XmDUbSL8V1rgPy8Ifi91YZ9f4D8vPG7b1Dv4Ybf5OeNGjPNKSc5f8jPG2ta
spf2yf4lP2/c4L5JOXTtL/l54/Zrn/rmzYPk542NEVmLAidIQOTnjdgOwafh
ORIQ+Xmj4xDz774BCYj8vNG6Q+bd2GhJiPy8MeZxglHmfUmI/LwxXP+qfxek
RHsnvbG6/Yu1339Sor2L3ghtDTt90UBatHfLG05a9/r5BdKivWfeMEw/7P5V
QUa098YbN4vSf17PkhHt9XmjW5l1+5GUrGhPgoVxXTrZ+qmyoj15Fp5MinSv
GZQV7WmwoJ44d1x52hDRnjELzhVny/7IDhXt2bEwc1ddXm32UNEeWNAfkvf0
5+hhoj1fFv4o6f1Xc2CYaC+Ehfa5iw4rWcuJ9qJZ6H3N3i5bL0d+LMScP194
ePJw8mNB/hibI9M9nPxY8DgvTDDLGEF+LKx8HhJmpCtPfizYu3WdHlInT34s
2O2xzG4NH0l+LDzy+R5VJatAfizwoj67FR9TID8W1G5Nzqiaqkh+LJxQmqa2
WlqJ/Fi4b9Y7iTNdifzYkG/X/l5dpUR+bAjO9ri+VFEmPzZCnyeX3oxXJj82
xrpqyqU0KZMf+9/fH2rzJW1VyI+N350B4yPzVMiPjZVb898e/aVCfmwMbtu+
/t2sUeTHxjhGrafhzVHkx0ai/rmsGAdV8mMjY99xjUtFquTHRtNI9wG3UaPJ
j42FtVOWvM4YTX7/vq9zUPHaj9Hkx4Z5x0DB5zg18mPjrjBac+FbNfJjY+MN
8w5hxBjyY6MvYducwo4x5MeGwY7q+KiZ6uTHhtaWIR+qn6uTHwd2cxukDkdr
kB8HP7R75Fw/apAfB0azw9dnJI4lPw7sJ51jbJfVJD8OEnwU3y/K0yQ/Dh4k
l1bYm2qRHwfTq9Qr313QIj8OVFoXe+2dok1+HOg6NzyM+KJNfhzIZLX95WzT
IT8O+DsCl4fajSM/DsZ8+K567Ok48uMg+WrAnMPQJT8OlOJvth3O1yU/DvJ1
/siFf9QlPw4+6A7XeMrVIz8OOKojBepFeuTHQUmxTq+phD75cbBD9Wicykx9
8uPg6K9x7LY6ffLjwv7zmyHb9Q3Ijwspx7AI5ywD8uNit3+hfusHA/Lj4q9m
m036FEPy46Lw3KXdjvWG5MeFv3xanpSlEflxkdgbt/zDbiPy46JGufSGpIIx
+XGRrcnk8dOMyY8LrSzX9tvfjcmPC2cXnVM740zIj4u6iASrM10m5MfF7POz
flhHmZIfF6Z+u/8qvzIlPy7iMoNWRUWZkR8Xln4mso7vzMiPC+MDbsu3LzQn
Py5uSluqZvwwJz8u8j2WrVTPGE9+XHDyR1dNV5lAfjy8bHxtE1Y0gfx40Dvi
3WTuaEF+PLzaZvSm6bYF+fFwqT3ec+YcS/LjYeXhXovX0lbkx8O4yZNWLCqy
Ij8emjnNNSMMrMmPB4/VV9O/LLUmPx62Kp8TLLthTX482JjcVNyva0N+PHRr
lmmtSLQhPx7qrmoOHXHfhvx4WC2xrHKmhS358TCjSDYgbYMt+fHwy8E4Kumd
LfnxMO9n9KUggR358bC5bNlmnWN25MdD5EMzr05lBvnxUPtXp6wkkUF+PByr
Cn+b8pxBfnzczTGPX+RrT358zDs+VGlbtT358eHvWtb1xtSB/PiQq3mXkLbL
gfz4cHlvlRSn4Eh+fDzRXm98PsOR/Pjo8JfoS/zjSH58PFZ4WHky0Yn8+Jgi
+XRL8ncn8uPj5KyHIzqXOZMfH6F58wc//XQmPz76JQ/uql3tQn586LvNiwoZ
5kp+fHz4+9bjfo4r+fERNGV2mIu+G/nx4XOPMano3/9Hivz4iDp6QWYcz538
+DilG3qyrsOd/Pio0Mj8sSPJg/z4iO/oaTinziQ/AXqb781zPcckPwFYwVsb
861AfgLMWRq16346yE8A7afRYS3//k4X+Qkw+fuhRTU2nuQnwMvhqVEpGz3J
TwAsi/02/q0n+Qnw59IJ5fssL/ITQKdSqiWp2Iv8BFiZfrnYZog3+QlQXFP6
TTLWm/wESHjRvq7/rjf5CbDRwWyijhOL/ARY0icbv+Ygi/wEWHF7QGCtyCY/
AaaX2qxgrGKTnwA/s6zuFPayyU+AWI9toYsjOeQnwIMnNfOv/ftcFPkJkPb8
4vYjgVzy80Ga/Jzdene45OcDj1PD93j+O3ciPx+cmZv1Qe02j/x8IDllpOUJ
fz75+aCR18PTesInPx/010UsiQ0XkJ8PWv1SGWU9AvLzwcYDf8O6k33Izwdr
/OO1PBR8yc8HZWULuyuLfMnPB8d17hwMdROSnw82HLRZynkqJD8f7A271Ze1
3I/8fFA0eqaSzdiJ5OeDBa+X602+OJH8fOB92eeLpL0/+fkgPmfgYulGf/Lz
QYyHK2/8K3/y88Gr5dM2bvUIID8fHLovc/3lrgDy88UtB16y1c8A8vNFa3NQ
6KqQQPLzxarGrWEtNYHk54shU5iXAnQnkZ8vrEfrS39YO4n8fPFF7cmrs72T
yM8X33KEi+tDJ5OfLw49ny896tpk8vPFAjV5p3OOQeTnC6dlaZJXSoPIzxe3
3x7c764zhfx88V24u4yRN4X8fDH1naHcGYVg8vPFzXVTB+9vCCa/f3tm8813
yE0lP1+8lrLMVNk4lfx8MXqG3rzJiiHk92/PvnnX/PwQ8vOFVKSv0zzdUPLz
RaJdxb3wY6HkJwRvybNZYe7TyE+ItLWLApY2TSM/IXIexa06Ez2d/IRw2Jfk
6igxg/yEeCScM2XonhnkJ8TD/iNjXd3DyE8ItaseQW86w8hPiOnFI0O0180k
PyHWVz5NS9IIJz8hehZlh9fHh5OfEG5+htyP18PJT4hJDgpp8kazyE+Ir9Vv
SkzWzCI/Icrbqw76PJ9FfkK0lff8l+EVQX5CTDA9PqfjUAT5CXG1WqkiZkQk
+QkxOfhMk8XiSPITYmJH8CK3tkjyE8I+U2bPQf5s8vODRsyl2rizs/F/qsHi
eQ==
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.1, 0},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalDelta]P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Exponential Moments\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0.1, 60.}, {-0.061345562461283795`, 165.76351869554563`}},
       
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {921.5999999999999, -189.86004134396768`}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.1, 0.0002413144234666927},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalDelta]P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Panjer\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0.1, 60.}, {0.0002413144234666927, 0.019514827863204774`}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {307.2, -569.5801240319031}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
     TagBox[
      InsetBox["", {921.5999999999999, -569.5801240319031}, {
       Center, Center}, {575.9999999999999, 355.9875775199394}],
      "InsetString"]}}, {}},
  ContentSelectable->True,
  ImageSize->{1240.8, 771.4401653758707},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.638628840661675*^9, 3.638949252997394*^9, 
  3.638949325526116*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Evaluation", " ", "de", " ", "la", " ", "fonction", " ", "de", " ", 
    "survie", " ", "via", " ", "diff\[EAcute]rentes", " ", 
    "m\[EAcute]thodes"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TeXForm", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
         RowBox[{
         "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", ",", 
          "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/.", 
          RowBox[{"u", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"SurvivalCompoundPoissonUnifMnats", "[", 
         RowBox[{
         "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]Mnats", 
          ",", "bMnats", ",", "k"}], "]"}], ",", 
        RowBox[{"SurvivalPoissonCompoundUnifPanger", "[", 
         RowBox[{"VectProbaCompoundPoisson", ",", "h", ",", "k"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"umax", "/", "10"}], ",", "umax", ",", 
        RowBox[{"umax", "/", "10"}]}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.638677711499194*^9, 3.638677731678989*^9}, {
  3.638677794484741*^9, 3.6386779331109037`*^9}, {3.638677990096108*^9, 
  3.6386780276665583`*^9}, {3.638694628138872*^9, 3.638694649320232*^9}, {
  3.638948998981345*^9, 3.638949010275749*^9}}],

Cell["\<\
\\left(
\\begin{array}{ccccc}
 6 & 0.811227 & 0.811507 & 0.798633 & 0.811957 \\\\
 12 & 0.56834 & 0.567072 & 0.557872 & 0.569321 \\\\
 18 & 0.34191 & 0.341587 & 0.35222 & 0.343157 \\\\
 24 & 0.17857 & 0.178539 & 0.216235 & 0.179621 \\\\
 30 & 0.081776 & 0.0816851 & 0.140781 & 0.0823872 \\\\
 36 & 0.033478 & 0.0334768 & 0.0644221 & 0.0338055 \\\\
 42 & 0.0124404 & 0.0124332 & 0.0644221 & 0.0125867 \\\\
 48 & 0.00420535 & 0.00421571 & 0.0644221 & 0.00428459 \\\\
 54 & 0.00132527 & 0.00132356 & 0.0644221 & 0.00134572 \\\\
 60 & 0.000386308 & 0.000384629 & 0.0644221 & 0.000393232 \\\\
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{
  3.638677938541997*^9, {3.638677987723178*^9, 3.638678003943533*^9}, 
   3.638949025799327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ecart", " ", "relatif", " ", "\[AGrave]", " ", 
    RowBox[{"l", "'"}], "approximation", " ", "obtenue", " ", "par", " ", 
    "Fourier"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Round", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"u", "\[Rule]", "k"}]}], "]"}], "-", 
               RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
                RowBox[{
                "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
                 ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "*", "100", 
           "*", 
           RowBox[{"10", "^", 
            RowBox[{"(", "5", ")"}]}]}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "5"}], ")"}]}]}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"SurvivalCompoundPoissonUnifMnats", "[", 
                 RowBox[{
                 "\[Lambda]", ",", "\[Alpha]", ",", "\[Beta]", ",", 
                  "\[Alpha]Mnats", ",", "bMnats", ",", "k"}], "]"}], "]"}], 
               "-", 
               RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
                RowBox[{
                "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
                 ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "*", "100", 
           "*", 
           RowBox[{"10", "^", 
            RowBox[{"(", "5", ")"}]}]}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "5"}], ")"}]}]}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"SurvivalPoissonCompoundUnifPanger", "[", 
                 RowBox[{"VectProbaCompoundPoisson", ",", "h", ",", "k"}], 
                 "]"}], "]"}], "-", 
               RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
                RowBox[{
                "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
                 ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
             RowBox[{"SurvivalCompoundPoissonUnifFFT", "[", 
              RowBox[{
              "mFFT", ",", "bFFT", ",", "k", ",", "nFFT", ",", "\[Lambda]", 
               ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ")"}], "*", "100", 
           "*", 
           RowBox[{"10", "^", 
            RowBox[{"(", "5", ")"}]}]}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "5"}], ")"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"umax", "/", "10"}], ",", "umax", ",", 
       RowBox[{"umax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638694657053625*^9, 3.638694700577511*^9}, {
  3.6386948592702103`*^9, 3.638694948522169*^9}, {3.638949028891901*^9, 
  3.6389490434819117`*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccc}
 6 & 0.03449 & -1.55242 & 0.08995 \\\\
 12 & -0.2231 & -1.84175 & 0.17261 \\\\
 18 & -0.09454 & 3.01549 & 0.36475 \\\\
 24 & -0.01759 & 21.0926 & 0.58869 \\\\
 30 & -0.11119 & 72.1542 & 0.74738 \\\\
 36 & -0.00353 & 92.4311 & 0.97826 \\\\
 42 & -0.05834 & 417.844 & 1.17585 \\\\
 48 & 0.24625 & 1431.91 & 1.88423 \\\\
 54 & -0.1292 & 4761.04 & 1.543 \\\\
 60 & -0.43455 & 16576.4 & 1.79229 \\\\
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.6386780373620863`*^9, 3.638694953627554*^9, 
  3.638949045511796*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Approximation", " ", "polynomial", " ", "de", " ", "la", " ", 
     "densit\[EAcute]"}], ",", " ", 
    RowBox[{
    "de", " ", "la", " ", "fonction", " ", "de", " ", "survie", " ", "et", 
     " ", "de", " ", "la", " ", "prime", " ", "Stop", " ", "Loss"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DiscretePlot", "[", 
         RowBox[{
          RowBox[{"DensityCompoundPoissonUnifPolynomial", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<g(x)\>\"", ",", "24"}], "]"}], ",", "None"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<PDF\>\"", ",", "24"}], "]"}]}], "}"}]}], "}"}]}],
           ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"DiscretePlot", "[", 
         RowBox[{
          RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<P(X>x)\>\"", ",", "24"}], "]"}], ",", "None"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Survival Function\>\"", ",", "24"}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DiscretePlot", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"SurvivalCompoundPoissonUnifPolynomial", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<P(X>x)\>\"", ",", "24"}], "]"}], ",", "None"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Survival Function\>\"", ",", "24"}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"DiscretePlot", "[", 
         RowBox[{"UsualStopLossCompoundPoissonUniformPolynomial", ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "0", ",", "umax", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "24"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Filling", "\[Rule]", "None"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[CapitalPi](c)\>\"", ",", "24"}], "]"}], ",", 
               "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<c\>\"", ",", "24"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Usual Stop Loss Premium\>\"", ",", "24"}], 
                "]"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], "}"}]}], 
     "}"}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.638628670189608*^9, 3.63862873688945*^9}, {
  3.638629840515604*^9, 3.638629840961132*^9}, {3.6389491943448143`*^9, 
  3.6389492056668*^9}, {3.638949355435585*^9, 3.638949390995332*^9}, {
  3.6389494891046047`*^9, 3.638949489525144*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[1, 0, 0]}, 
        {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJw92Hc81X0fx3GhnaYKlS3KPI69zvsc5xzHGS5aUilJRUVKhczITEJGMrIb
GkRL42qJdulq77pCaYcG5e6++/xuj/qjR+e8zvs8ncfj9/0dLd+V0xYryMnJ
9fv910teTu73n///mEWf/+JnkcTZnv/fn2OctKaV4kUFW+jfFzkTv0182med
yWH/7+cWx1395W4lZNL/3+cMKV91/MOZDM6f2jOOxc2aGqldBj3+JUdFfTfn
nytbOEv+99PKubF3/K+Ww0z/NSems9v73LgMztUr//15y3lksWdNRQrT+8i5
lfJiXpgm83qfOMkzYgVVTcyeLxxlXku7a1AWPb+TE9di77Rx4FZ6vW7OmSMF
D+6nbqXeN47WQAOVr1+2Uu87x+/b0i1qvGzq9XAmHmqWmxGaTb1ezodhjllH
8rKp94vDOh3nv31XNvXkwJK8j3x1gHm8HJ4NWZSZUJdN/X64Me/Y3R9HmefL
Q3Sgun1gI/N6CihuTDsY9ZDpKSJQP+iBZh/TU8TaMcLgClYO9frDqrFk56GQ
HOoNQKTDJl/lxhzqDcR+rdN76nVzqTcIXn3RZa8ycqk3CONHenSuH5hHvcFI
/ZYu7U7Io94QCPr/bN8/eBv1hiL+bfv5ri3bqDcMHzy8PS3H5VNvGGoVzOyH
bc+nnhIc9net8FXdTr3hiDyqMSo8azv1RqA71fhdp0IB9UZC81Dzm5crCujx
I5Gu/2vCqSsF1B+JIUPuXfXVKaTnj8Lso6ecR68qpNcbhdVX8o77HS6k3mi8
/dDmxekspN5oJMXE5zUZFlFvNNbZnTw9c34R9cYgOj5x8NLNRdQbA93m2Oot
DUXUU4aF8tyQwLYi6iljJKt6dMHYYuop40C1JKJCWEy9sZhxNj+8N6KYemNx
VHlU/ZfDxdQbh435PwxqvxVTbxwet/tYGfF2UG8cnhTNMzbI3kG98eCP1vJn
fdhBvfHwc5N7fXVKCfVUMHrSJ78zPiXUU0HzVT2txYUl1FOB/PARMRmPSqin
ijax8ct+WqXUU8X4KxeP+QSUUk8N27M3tnAOlVJPDVPlr/dpKJZR7/e/w1vb
Vs8so94E9Pc80FW0q4x6E8BWfTb7Z28Z9SYiUJk1oM2jnHoTkadfu3tfVTn1
JuLcurbo8h/l1JuES4nyipNkFdSbhBxxZ3RIUQX11NHg8U06sKOCeuoY+Can
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
b28E+XGxTj/FzuqvCPLj4vndNZrhn9eTHxeSvEX3SnLXkx8XkX3ffu61X09+
XOgsH2Vd9Dyc/LjYY9jBWpUcTn5cpOXMKTcwCyc/LkpihgjO3Qsjv997D1y6
hbgw8uNiQOo7pVKjMPLjop59uPbl3VDy4yLX/l7EoI2h5MeFxsHBk0ewQsmP
i7CYXYu/PllHflyEl4a8Ob15Hflx4fpktvdyx3Xkx4XFbM8F3e/Wkh8PP6aH
Ji/csZb8eGjzu7tkr8da8uOhWuV61B3FteTHg6q2vuDp0TXkx0NYxxKDC4Fr
yI+HKh/rxFSdNeTHg3DfgwOGD0LIjwf93KPtuzJDyI+H2wp9i/uJQ8iPBxXe
LDcLhRDy48E0YNcxnFxNfjx0zOqp0QtbTX48VGbOM3nBXk1+PFzwfTJx7cdV
5MdDXGDl7Mf7VpEfDxq9/Q+orlhFfjw8tKl5YmC4ivx4mBLzJm9wRzD5/d77
/l5kQ3Uw+fHgv/Cmll1gMPk5I+5Tg1KSaTD5OeOt3cc1nFcryc8ZaWGHpvYP
XEl+zgjaz+2b2x1Efs6YNeFLETYEkZ8z7GXahQeUgsjPGcc7hOsrCwLJzxk7
o/Ur1Q0Dyc8Zn9NGh44/sYL8nKEUqWGb5raC/JyhULpWN/zFcvJzRrL8tkUP
QpeT3+/+rPoxe4cvJz9nlN39InhTtYz8nPE+54pcJpaRnzPGKUzjFj4MID9n
nAiP7x0YFkB+zogsztO8MTaA/JwRsME592O9P/n99ono5S6e6U9+fDy7ze4/
9etS8uOjxn3T33bbl5IfH5sv9HPf6rSU/PiIUh+fa/rvEvLjg9fWunropiXk
x0dJj80lbfYS8uOjoiIpftWjxeTHh+6pH6lfEheTHx/dqz1bKswXkx8fFpb/
emx46kd+fIzchcEJm/3Ijw89J5bcXgc/8uNDe8F8l89vF5EfH0GdA75PL15E
fnzMl1TZXnVfRH58THbZbDNHcRH58SH/Jsjs61Ff8uOj0uXZ0pIgX/LjI7Dv
Mmuani/58TFkyf13gx4vJD8BTmc0DTqTs5D8BDgVeaJ33V8LyU+A4txkD/0h
C8lPgOq3TwqvNfqQnwBB8+PiAuJ8yE+AB1r+9Z0cH/ITYMiPHa/u9y4gPwFy
TCtViiMWkJ8AgwquHDftnU9+AsTeOVSZHD2f/ARoy8q/WCY/n/wE+LxUwzos
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

          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0.00008136683719672737},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"g(x)\"", 24, StripOnInput -> False], TraditionalForm], 
          None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"PDF\"", 24, StripOnInput -> False], TraditionalForm]}},
       
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0., 60.}, {0.00008136683719672737, 0.04515689367152255}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {307.2, -189.86004134396768`}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
      GraphicsBox[{
        {RGBColor[0, 0, 1]}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJw90Hk4lG3cxnEtpLRSiCKSJMma3ZxjZswYQ5E2ladIWVI8SFLSok0kIaGk
R2WpLCmlbC1SWbKkVCQiskRKi8rrffvNex/8Mcfc13l956PkvN3edYyIiMio
kf81o0VERv7+/xmcrjug4tbLiD/zv89tBot/ftWndcLPjxluFtrWcUt7Gbr/
99Qy1jSEPSliCr9vYLQqiIUr6fUy/q41M2S2n23uVxW+38rgOe0InSXXy9j8
f08745FGe5TXJOH5Tkb84P64dJFeRkX5/z7djMhfebnnB3por4/hITOsubC9
h97vZzhFiRjqv+yh/QHGtZ0Xbt963EPnvzBYa1Oi7uT30H2DDLOJsRqCDOHe
d8aVwdHjgxOEez8Y1V/+XNwcJtwbYqi0C3rlgoR7vxiPu5z5Vz2Ee38Yo9vj
7DUchXsiKL2/ecYFK+H7Iqh1rX4jZSTcH4VqM3/H/WrC86OhK1c956OM8L4x
qDoZb8ceJ9wbi18OVp6HB7tpbyy8i2fPTW3rpj1R6GoLTOPrumlPDJVuG5fZ
3e+mvXGQlNINKcnupj1x6E26MK45SbgnjuzMcdn/hQv3xiPGffl80SDh3gQs
10yeP7xFuCeB77u2R0c4CPcmYtb+RK8cCPcmonrUcJanhnBvEsr1a+cXyAj3
JiM+2HFexmjh3hSUlA0bm/R00d5UPBVXaPd90UXvTwV7SMdkXUkX7U+Faujb
k0PpXXR+GhbjvN6a6C66bxqSjqZL794j3JPEndWvTnpsFu5JYvZNRU31pcI9
SRz2d/EtMhDuSSH0wNbSRXOEe1JYlti1LEBcuDcdMa+DviT2faS96TAekOed
e/mR9qZj2sLNSYHFH2lvBlydE+U0Uj/S3gzsPrezMPvER9qThsLeM1GiAcI9
aVxhL3+o5CTck4ZRU2rtMFu4JwOpSN3cuIXCPRlsHPtkTNs04Z4sDlQ80mn8
1kl7sqjY3pUd2NhJe7LYW9kw+/q9TtqbiaI1Pm77L3fS3ky4nNcbbg7rpD05
3FHU6S3bLtyTw/vjPX/0lgv35DBU0F0zZ4lwTx63DC//OCIr3JPHp8qcUZ4/
O2hvFg7rKIU+fN1Be7PwT+lM7bi7HbQ3C3+6qspaEztobzbOHBNXSd/dQXuz
0e/ts6B3rXBPAe8OyD28bizcU4C8u+frYVnhngK+J383fDn4gfYUgZ7ze1l1
H2hPESe2/TPNKvsD7c2BdzZ+9IUL35+DH7YdNSyPD7Q/B7d/S2bzLYXn5yDQ
bs+YKcof6L45EE+J2h3/u532lHA2j/lt8GU77Skh7rnNes3cdtpTQmeKZwT/
RDvtKUGizZu3wqOd9pTg+/T51NUc4Z4yBIqFiuvmCPeUoRqYJ/AYaqM9ZSi6
2/0+Vt9Ge8q4UpExozS7jfaUsS9gSpdyeBvtzcWcTWcNU93aaG8uYgJnSq9j
C/fmovJpZR9rjnBvLsYqhR7a9Os97c3F7bTAlpKX72lPBaxC7rp/brynPRXU
dqfFMaLe054K1hR+C9u0/T3tqWC8HTO4SiDcU8EGkw9T96kL9+bhp3QYJ1Bc
uDcPKuG6h/LaW2lvHrof7rlm/LCV9uZhedKNGaNSWmlvHhynXTsjfqCV9lQR
FqGbbuvcSnuqkB414PCMKdxTxUaNbLtjSsI9Vfhdz5wcOEq4pwrRIoWCuHct
tDcfR/R2r28raaG9+dA7df+p44UW2puPBS+XP/2yv4X25kNc21cy06WF9uYj
qthxRShbuKeGAPO8Zb7zhHtq6CoNr/UTE+6p4VXujrLQD+9oTw39b5XNL5S9
oz01vB2rvL007R3tLUD2ztay3mPvaG8BSg9398tsfUd7C7BK1KLK3Ea4twAf
To09ukFTuLcAhVOYEbumCPfUkcf8fvpYXzPtqaMmxjkjorqZ9tShMWqHfGhO
M+2pY9LRG0e3nmqmPXW4/7ZvZ/k1095CzPC+sn3CCuHeQkg+WJxdpC/cWwg/
x8x9LtLCvYVIrds8urvnLe0txMT2yxqfrr2lPQ2EfbOtr97+lvY0oNl5sTZG
6y3taSBxXoSPWX8T7Wng8ottXk+zm2hPA/cfXOu2+LeJ9hbhhmu172WdJtpb
hDRl28ZfnxtpbxGu5hss415vpL1FkG8vWxLm20h7i7BD/aNehW4j7WkiPP2+
guSXN7SnCYWgrZ+cct/Qniae3HhUdMvvDe1p4qzauQIV/Te0p4nB2aPnpn59
TXuLEbt8vCbv5mvaWwzlqg+yEwJe095ieLz2kxwweE17ixEnq2wg/uMV7S3G
TR3PY7b5r2hPCwv23+97EvTq7/sztbA0TlR9v9kr2tdC0oEt5TuHG/6eF2jh
mc9XxvWSBrpPC8Hmp/L1Dzb83QvRwp7Ag6ZjuQ10vxYMgwLDlSc0/N27roVT
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
xNr+EvkxMSqpxHz30EXyY8Jmtbp93cWL5MdEwhH+22V2F8mPidItdyU+/U4h
PyZ+3db4k5GRQn5MlL+1aDromEJ+TFhFRdTtmJBCfkzsUgqasPfOf+THxCIx
Xnq813/kx4R2tNjb0jn/kR8TEqcT60SeXyA/JtrOPc3jHLtAfkzo3DO9GYUL
5MdEenTkn/ffkslvpF/Kt9goK5n8mLjMvq4R4Z5MfhbYynbyfzs3mfwsYBHS
WKH+9jz5WeBlvYynV8J58rPAcseYAymrz5OfBYa2X1xaIX2e/CygOm2y1JOM
JPKzQN+6ea+rFyaRnwXiBeV+V66eIz8L8O8rOztonyM/CySLHVV/cPMs+Vng
wbbfjoNmZ8nPAlvYQYfaShPJzwIDqx0tj9slkp8FMj9cM25rTCA/C5x3SJvQ
5ZlAfiN9G79uihuKJz8LbPeXFek4Hk9+FpidXBlfpxhPfhaoGXL9tTr3DPlZ
4JaU7Nft/DPkx0LjrI1O01viyI8FtQQHeWZQHPmx8I79SbZ/Rhz5sRDY4mqr
mHOa/FhI+OJdULr0NPmxUNoX/W9Lbyz5sXCwY3Oo14lY8mPhm3+FrIt2LPmx
sKXcbG1hXQz5sXCq5suhXYEx5MdCyGKNlijFGPJjQd3Iumj0o2jyY8E/T2rP
w+3R5MfCRr8nh+pnRpMfCx3Rax20H54iPxay7uzyqPY5RX4s6P8odMxRPEV+
LKRE5d+vqowiPxZi0yfbzdsbRX4srHy96841rSjyY+NQXUfZltaT5McGQ9JP
IDh9kvzYkHjopbpacJL82Lgiup59ePRJ8mMjxGfo/PPbkeTHhoytJpvxbyT5
sWG64pdF8cJI8mND9bTI3rTyE+Q3cl4iu7qfdYL82Hgzav6gXUEE+bFxzUM3
+J5hBPmxER61YIbpzXDyY8P2TOrePP1w8mPD22pDwqK84+THRkdytdNp4+Pk
x8ZRZ4mGnqIw8mOjtttZW50bRn5sKD9ecJnz7Bj5sRGhtOGk0dpj5MdGRcgm
p+EPR8mPA22V5FORO46SHwcxGgYV7WJHyY+DnT8vFwzFHSE/DnT/7F70WOMI
+XEwi937k3fvMPlxsHLUkZn+aw6THwdOrlUnuZ8PkR8Hi/raQ/KPHyI/DtaH
6ciWqR0iPw56kocSPUpDyY+D4m0z3BJdQ8mPg9hb+9pWiYWSHwepi6SjT6ce
JD8Oyk8oi64UHCQ/DmY3yrwJ7z9AfiPnz2tVGsUdID8O4iPlLjjgAPlxYHc+
eXFD537y42Beyrp/7kXvJz8O9qSuVZdg7ic/S0yY8fLMtd595GeJSzfaSy+f
3Ud+ljhasPBVv80+8rOE/ctIiSPDIeRniQWrfye75oSQnyUaI6YOhG4OIT9L
KK1rcn4vH0J+logdWPvoe8pe8rPENJkdXVHT95KfJZ519dtEHAomP0voDGXN
a/m5h/wscWi94oNQnz3kZ4mDkmXR3h93k58lfF/1zIp33U1+lsg8oDb0oyWI
/CyhkiD24bBzEPlZotDrepbJ+13kZ4kTrGRMcttFfpawvWtw+ktPIPlZolLr
UHmnfyD5cdH968eUtuGd5MeF5knZ1KawneTHxbC62efKmTvJj4v8KY7O19IC
yI+LBNWC/f4mAeTHRe+TFwOzqnaQHxc2WeO3nt20g/y4UMjalvdpyJ/8uFBZ
k5k3Mcaf/Lgwk6lz6VnsT35c3H8iV3as3I/8uAi+WCna5OFHflxcUFFe3jzB
j/y4GPdnwtCxK77kx4XeS8X1L5b6kt/IfSkBPYVf/iU/Lq74HNMzSfiX/Lgo
iZWq4rD+JT8uXMd89XrZ7UN+XDxMlK/vPu1Dfjyk79rUvJvtQ348LH2/P3D/
Z2/y4+FBZ3vyt2Rv8uOBGZjiVW/vTX48/KhyHDtT1Jv8eNhgZ2jh67Od/Hho
mp6h4vp6G/nxoGDo5fuLu438eOi8ryOrmedFfiP3JdQqf1LzIj8efCXlHuud
3Up+POSXRW7+IrWV/HjQurp099xwT/Ljwe7Ho6w8cU/y4yFJ/ETVpUMe5MdD
ZNf8x+1iHuTHQ+KZpzleR93JjwdO+uJS7cnu5MdDeLD1xgUxbuTHg3GZvJi1
ghv5WaF5/SbH8LQt5GcFj6Xe8z8s2UJ+Vgha/GzN0tLN5GcFiWPSowpWbSY/
K9zeH7V0fpcr+VmBf1o8PjTElfys4HnIfVWVjCv5WSFp7eE5v7I2kZ8VbqSU
ZY4RbCK/kc/PG5obO1zIzwp4vy5r/2EX8rPCsPJpk4/zXcjPCsbus4snPnEm
Pyv8jApOaPFyJj8rfHXr5m+SciY/K2QOt3gcy99IflbwTaq8aeOykfysIM3N
Er88aSP5WaGksXj1idsbyM8KsfOlCoY3byA/PhRO6bn3z9hAfnz0d55Ze+f4
P+THh0fUrr6gPify4yNeOShFZpUT+fHBqRi4t694PfnxUZ6zvvKqxnry48Pd
/djeEwnryI8P45BXD+QmrSM/PlI1fUtY+9aSHx+3NvqW//nmSH587Fql5g0f
R/LjI/sn0/139xry46Nv0bhL6p5ryI+PtCXHOAVdq8mPD98djbHp21aTHx9B
yTzZjoFV5MdH5bngHZ5Bq8iPjyrzujB10VXkx8e2zwH/yJ9cSX58bL2arqKn
uJL8rLFU/qeRZ+YK8rNGou1utTzmCvKzRsHkSf9NrncgP2tEdB4PddvqQH7W
KF+gXHdnrAP5WeN2bVD+8Lnl5GeN5ofSYQtNlpOfNWbNCi1c0mBPftbw+ZT3
WTbQnvxG7jtu/fGxnD35WeOwUX0Ys9CO/Kzhd9boXYCLHflZQ/n9oLTrBDvy
s0ZlWmjQqOvLyM8aJ+9fDeasX0Z+I+f7W7MWjF9GftYYmrI81MZrKflZo8eg
aZznU1vys8Yjvy+lZzVsyc8aP7ckvnkRaUN+AkiLaZ2T+C4gPwGCk4wTFjoL
yE+ALxrrE9WrrMlPgNEthheGzK3JT4B0sQ3vT2bzyU+AxOk2z5pV+eQnwDyp
DeJvzlmRnwANai3OATOtyE+AHWumdF6K5ZGfABOdVeudpHnkJ8DNlODYU3Fc
8hMgfFpKqdFsLvkJYPRzp45liiX5CSCev77u6iJL8hPAW96pzvU2h/wEuLxx
02EXLof8BHB+47Mt8QWb/ASQ73yjL+bBJj8B3rOjc2P/sMhPAF7kli5WDIv8
bDCzzWHsWE0W+dnAx+m1XUWZBfnZ4La3vW2sqwX52UCxj5OwYqwF+dlgyoV6
kdEXmeRnA2UDRa8oLpP8bMA/enbgdxfIzwZBP5PKTaJAfjZgVt10YBmD/Gww
eM9eVraMQX42qJzYpCGvyCA/GyiIr/LdG2hOfjYY17r+rt4LM/KzgWVBv/xC
QzPys8El8z0d9omm5GeDLM3O24ljTMnPBo6Pct1+eJmQnw1s9kpNcnxtTH42
uDtu6p9Ma2Pys8FB09xn3YVG5GeLsQ/1V43WN2L8D0tHG2M=
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0.00038462931771395003`},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Survival Function\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0., 60.}, {0.00038462931771395003`, 0.9502129316321362}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {921.5999999999999, -189.86004134396768`}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {InsetBox[
      GraphicsBox[{
        {GrayLevel[0]}, 
        {GrayLevel[0], LineBox[CompressedData["
1:eJw913k0VXvcx/HTPFwVJVESMlcyT+F8cHAMp7lIuk2S5glpkkpzV3KrS0Wa
S26TBs1SGiQXSeYQxyyZytR9PM/9fp+9+GOvvffr91nvP6xFbcm6mcv6CASC
Xj2/83oLBD0//3/F3kpPu7XjmvBU1P9eD4UZ8zv3DjaMo/t3wpC8Wvdt/a8L
jf/v+ihcv9Leo0/5dXqeJ8yQi5lc+TRe+J9WIgwfqttWGv43vf9VGDLm1FXz
328Iff/vkgrDjaMztXRv0vfVwkUnMzbPbb0p/JD2v1ddz/vw6lhyi7xG4S3R
gAOX02/R+9+Fsms6hXNtb5PfLAy3qjOyunObvm8RVmkWrRyvd4fOaxMqxkw7
HXPpDnk/hbGuVQ+GaSSQ1y4MmjcwI/ViAnmdwpL0yD90tO+S1yVMPFcVfyLu
Lnm/hI3/WKyK1r9HngAZpe9mf7tzj94XwC/TX2mx+X3yeyFIbu7E+sf36fve
8NPf3H4DD+i8PjiwYcKmopQH5PWFque9S6/cEsnri5AuucpnWYnk9YNfYMxY
/fkPyeuP8Ict2wMqHpI3AOuXL//VvOEReQOx6OS35H8Fj8kbiKDdyZvLIh6T
NwieCT4pOdpPyBsMvz/akvsnPSHvN0An1Pvw/KfkyUD125g/V3c8JU8GQd8H
BJ0/84y8IYid4ftCwf45eUNh8NvET5drnpM3DF2FAvkRbknkySK7cP9yg/NJ
9L4sGoebjDjakUS+LPxqdyXKzX5B38tB9G/wpNM3XtB5cgjNm3Np2OBk8oZD
Pvpk4hzfZPKG44j2LmePl8nkDUe57kaj3movyRuBuu8SqXjnS/JGIClsxhP1
4pfkySP+mKz+EZtX5MlD0Tj8y77oV+TJ48ms5buVfr0ibyRWB4admLYwhbyR
kN03tr/lixTyFHCgz6l71eNfk6eA6fV3aoL2vyZPAcr7vW8L6l6TNwp3nxtO
jp7xhrxR2N7wuXFV4hvyFNHyrsTksOpb8hSRhpkWSofekqeIvq8jDxi3viVP
CX2jrH5vW/yOPCX4B0/qsz3jHXmjIb/L3LkQqeSNxvo0l74TE1LJ63k+UHJ3
u/Z78sZAdexSpcLo9+SNgeiVSfsshTTylFFuuq22OjyNPGWESiOnnB3ygTxl
DJyeVLj+yAfyxuLMp6J1HkPSyRsLa2srL+fwdPJUsL3xRK3ByH/IU8Hx+TMj
BGf+IU8Fsk+Ghk0bnkHeOIRoPhNs8cggbxzK1O2K1kRnkKcK1ejgISrl/L4q
hi6Z7BU0IZN8VYT1zY9euSmTvu95vqBfe+njTDpPFY0P8vu/75tFnhpeh2+X
Gz41izw1ZMz2cbzwVxZ5atC/r/N1ZWkWeWqoMVVZN2fCR/LUMHrF7OJpAR/J
U4ffiz1Jzs8/kqeOu0OO+U4YlE2eOpInLehXMzObPHVc9bmavelMNnnq+CVb
qvuoIpu88UgyTwm7qf+JvPHIkfnw0XnzJ/LGw8dviUrQ80/kjcfPp61NZgNy
yBuPsHiZKdun5pCnga171jvbncghTwNeWvHpIQU55Glg6h7ZKjO1z+RpoGHB
jj6LfT+TpwEcNCzujvtMniZksqr9h3z7TJ4mEisim8ONcsnThI5/3wuHAnLJ
04TXi+PZ3Q9yydOEe9GFtIb2XPK0UFMWeX3JlDzytJDdrTR34fY88rRgeyXa
u/ZJHnlaUIyKLRvSnUeeFtp2Je9Nt84nTxuNJwc4mm7PJ08bkXlBfq6P88nT
xo1pnisUOvLJ63k/WqngnEUBedooDHad0xpYQJ4Ohu859rvSvQLydKC3sdxT
obmAPB24nxy+rsWgkDwdqODRnsdrC8nTgX3bY7VN8YXk6SJmqOVa9ZpC8nTh
36ilnKFdRJ4uZrZuW7x7WRF5ujDKbau3vVBEni5CS3Z8HVxaRJ4eIrYPy6hR
KSZPD97ZVtfKvIvJ08PV7hHvWk8Vk6cHaf3xOq28YvL0oN/Pyzho1BfyJiBn
3BXV2jlfyJuAws2x0SHHv5A3AYpu57osPn4hbwLiT6T9GjSohLwJ6JCJX3FA
p4S8ibAKzZUfJS4hbyJW/DZJ4d7yEvImwqjewnnx/hLyJmLicbHL6CvsTURM
9NWDxa/ZmwQtySineCl7kxDf4HlsV/9S8iYhTr3cw1urlLxJaDpy2sfKqZS8
SUipObRMybeUPH080otpbNtbSp4+NiS7HMi4xJ4+xmgqx15IYU8fd2oNzq2p
YE8f/b4HN0zoV0beZJjO7awq0CgjbzLWKR5p3ioqI28y3CJSAvv7lJE3GXeb
15Zv21NG3mRc8k19lHuePQPU2cbsH51M7ysZINe4u8a2lH0DGNimRTkIvv73
vbsBFJ37LdIa95XOM8CLRffVK2y+/ueFGMD+5dPSHd5f6XwD+Ng7PGzY+vU/
L8EA9xc1lplGkZdmgJDDVfdnPCBPaoDzy/fE4xN5AkOEr3rv1auZPCVDeLu9
DIqQLad9hlDu9i9qmlRO+wxxY8aHnWpu5bTPEOfcnQPH+pXTPkNYHVrZVhFa
TvsMcWec6uyt58hLMMTmgFJB/lPy0gwRePXVob755EkN8aTvytPtreQJjDBC
L70tUa6C9hmhe2nfrfaTKmifEfbdKlQ6Ka6gfUbILw4qTVhaQfuMsFYhu/F0
cAXtM8KgLuG2qVHkRRnB92B+yvsE8hKMEHvwX035dPLSjHB/b+K/2lXkSY1w
6NWkVwN6S2mfMU7mjG5MGCOlfcYY2CEePMlUSvuMMTpQ7vymqVLaZwylL9WS
A8ultM8Ygf26rq0KIS/EGBEa7+eqRJEXZYyG+5U/Ym+Tl2CMMJ0Eo5Z35KUZ
o2ujyd+KZeRJjaGw55fMsA7eZ4JfY3XbPstV0j4TjMjyHuyvW0n7TKA4r6ny
KyppnwkOXNfU1fGspH0meFLqvdRuXSXtM0FY0W4tg33kRZlgY2RAV8sZ8hJM
MDd7v194AnlpJhj+cWRl71TypCZwPTux3r2EPIEpDs13qFrbxvtM8fNHP9sV
MlW0zxTHog3crdWraJ8pngzZ5ldlXkX7TDFY58+SNZIq2mcKPNHsSFtSRftM
8TilpalfEHkJprih2SFQ+oO8NFOcqTsxs/958qSm8BK+GZp+nzyBGXaXrZ2z
/j15SmZYEHhKWP+F95lBZt3nL6IW3meGOzlH7DcPrKZ9Zmiv9VobqlxN+8xw
LmGnz2qDatpnhqunhGqTRdW0zww6khln0jyqaZ8Zlje4vROtIk9qBrdKhci/
gskTmCP+oFfrq2PkKZnDJrMxNe0iecbmkD0xR3DzAXnu5kjcP3LbqlTeZ47+
66aM613E+8whGPj4n43feJ85UhXy1j7tVUP7zGGqH15cOqKG9pnjesp3QYlm
De0zhwL2JD4wr6F9FrA7drLKz6WG9lkg3ComoNmLPGML7F6y3dFjNXnuFtD6
lCY8voM8XwtEp+hOjQsjL8QC+UarvKPOkhfVc59f4rn4Fu+zQOqtfSa9X/A+
C6RkGX/dlsn7LKDa99X89FLeZ4mZiVMi27/zPkvUv5Ce6O5VS/ssYfB8w5x8
uVraZ4mmpb/yj6rV0j5LFKcY6asY1tI+S8h/cvDai1raZwmnyZ1rUqaRl2CJ
5J2J24p/Jy/NEnfOrY3KWEOe1BLWT8+UnN5OnsAK6qcc1uIweUpWSPX5vORZ
FO+zQvZ4/bKRV3mfFV6OXTXC+T7vs0Lk2krVma94nxXShihamGfxPiuUhG44
2PaF91kh9KSLOLye91nBeeSDuL6dvM8KKjrrq2cNrKN9U3DY8ooweGQd7ZuC
7DRpzR71Oto3BY821uktm1xH+6Zg+8g9durWdbRvCnZnem98LCYvZAqUw+p6
G84hL2oKvu4TWu1ZTF7CFNi25Cy6s4a8tB7v166kZ1vIk07BHxoWF6/u5X3W
OGjd4rH+GO+zhsgwXEchmvdZ43T0uaWnrvI+a8gu9fDoTuB91ng113Om8Dnv
s8Yd5QsXFqXyPmvEOa07tfgT77NG+Lth++xLeJ81ynNz7vWp5X0996adQZda
eZ8NLLqDVXQE9bTPBps6R7UeHlxP+2zwLkzJLVO+nvbZ4IDSorU/Veppnw0W
DbCN76VbT/ts0HvZyhn1RuRF2UBx4Pdrj63JS7DBYQeNXmucyEuzwQ718HO9
ppMntUGh+rfsLfPIE9iixVe1/NMS3mcL5dnjRims5n22WP1n112rAN5ni9/9
cvuIgnmfLeynF4uN9vM+W5wttHvbL5z32SLvoXXKs0jeZ4vqrCG7F5zjfbaY
sbtdWHaN99lCkuQqlNzhfUJcsZnzPOYR7xMi1ivoV04y7xNCrVrdqi2V9wmx
5trnG11ZvE+Ig+uNImvyeZ8QWZX1BkllvE8Ig0/Vd3bU8D4h2gsMPcY38T4h
VlzuO/d2O+8TYodfgVS7VwPtA/r8vQH7Bzb8974MsOH3D5H/DGugvUBAt5Nm
r1EN/32vBXz4cWy0skoD7QfChqfEq2qSByCmYMmwYRPJcwdeKywJqDQibx6w
aoyZXJwleb7ATcXP8h4gbxOw1Cz1doMTeSFAw0FdpQ0S8o4AzTnXtxXPIi8K
sJSPH2TuRd5lYOgNg+ati8hLAHqHNC2P8yUvCTgesvSvlNXkpQGdSvdupW0k
L6+nx8TisudB5EmBwIRY77PB5DUD+vJH3VeFcj87nO4jVzr+EPezQ+/hfuJ3
R7mfHVwzE27NP8H97JAZ2epccIr72UFWOsJaHMv97LDNq+jR+Uvczw6BHr81
1cRxPzuEWoqGqd3ifnZYZDIWjve4nx36ZI254/GI+9mhQOFBhOdz7meHKonn
MPEr7meH6J3z52i94352eHpyWETzB+5nh6Nm95tuZnE/Owx32nNx/mfuZ4ci
4zPZbQXczw732hRu7SrhfnZ4nf5zaVc597PD/fcmY5dXcz97PBwTNzC5nvvZ
o0tbfdaQJu5nj4jdU3Vd2rifPebHvX4Q0MH97CG41m/Cn7+4nz02H11+81zv
b9TPHoqftDac6/+N+tn3/D2ddyZi8DfqZw9pdYN3wNBv1M8e7x9cL3YZ/o36
2eOQvI5EVoG8I/Yo0kz7+FaJvCh7WEz6EL1pLHmX7fHygF6OrBp5CT1778Vd
idUgL8keP2bnWo/XIS/NHnOs/30eOYG8vJ7nh3Tn95pMntQeahnKFguMyGu2
xxKhR0i8KXkCByj9kFnwzYI8GQdoz9f8oWlNnpID8vZabJ4uJE/LAXUZR/qt
syfP2AHzg+RTdzmSBwds9VxVd0DM/Rzw5G32n6Fu3M8B049bVvpP5X4OiJbT
GuI1g/s5YNW8txNMZnM/B4TGNPj18eB+DjC/3K/mzTzu5wDRklHZu7y5nwMW
xL9zM1zI/Rwwb/yCgJzF3M8B6nrx/ht8uJ8DzAbqrem9nPv1nD+hbNfBFdzP
AdcPbf7UfzX3c4CmrsahrWu5nwjeDxNflK/nfiKsXXgm2nET9xMh91iabXQA
9xPh46iilNrN3E8Ef42fMw23cj8Rjv5R3G/tdu4nwtyxVd3ngrmfCBe6+3h9
COF+ImRNeWjRuJv7idC+VDtx8F7uJ8IcowFtyvu5nwj3510fpn2Q+4lwekEv
dd3D3E+E/OAIl/F/cD8Rgh6Gnh95lPuJEJh1Wiw4xv1EkPhbeXyN4H4iFHgu
rX52nPuJsHXnI6U/T3I/EbrX7Ou9KJL7OWLdtttPNU9xP0dMHf/ep/w093OE
wqJBcmeiuZ8jBsi4Frif5X6OaHSSL2yL5X6O6PwSNeHUee7niFXJiaVmF7mf
I4Q+XSM/XOJ+jvhoevaL9xXu54gguSNzpFe5nyMc4xaGrYjjfo5QaV8RK73O
/RzhcuXmuQV/cz9HvAiovZJ+g/s54kjs0beWt7ifI4Jt3iievc39HPHsxOa/
f93hfo7YucXutOdd7tfT54/dbfH3uJ8jfj8292Pnfe7nhPizkY6OidzPCbrL
yhcdfMj9nDB4xl8Wbx9xPyecfZL5pdcT7tdzPzhohdlT7ueElKfGVcuecT8n
HN3nvzb8OfdzgpJ4w9D7SdzPCVkjdPNzXnA/J+go+3xtSuZ+PefH3J0y+BX3
c4Lji80tyinczwkF63JUJrzmfk5w03j93uQN93NC+41BMlZvuZ8TUpsMG63e
cT8naEbFHDBP5X5O2PI0uGLye+7nhP3hmQoaadzPCTHNvhPlP3A/Z/SXKTEV
pHM/ZxSn37SvSud+zojbO2ZJ2j/czxmlblMuxGdwP2ck7O2QP5jJ/Zyxcrri
68VZ3M8ZZ+u0U8w+cj9nxKofUx2Yzf2cMfVcuPRTNvdzRpaHhWbsJ+7X46Wu
q/HN4X7OuLekxUHvM/dzxoPH84Q1n7mfM/rWDKq5nMv9nDE9yXHGojzu54xE
Wc3dCvnczxlja08efJfP/XrOz13sv6WA+zmjfaTGNK1C7ueM129naWUUcj8x
fjMX9t9cxP3EMO+Q6RxdzP3EmGj0RPZJMfcTY8gDjVleX7ifGItcf3xo/cL9
xLj55umRsBLuJ0bt7IJTGqXcT4y3EUf6JJZyPzGsP1Rmisu4nxg+E4tkP5dx
PzEaKszeL/nK/Xr2rYv6re4r9xNj1q09hRvLuZ8YAyymiX+Ucz8xfqw3mLel
gvuJIZ9rptRewf3E8DWRRARKuZ8YczMs079LuZ8Yu+7G5Kys5H5iWJS33y2t
5H4uOH/60sa5VdzPBbeP5iq+q+J+LsicfPmWZTX3c0Fg9S/7q9XczwU71tzK
la/hfi5Y8WPZ1p013M8FW09eNaiq4X4uuBj0pc+0Wu7ngvnm07sSarmfC/S0
xqmPquN+LlC+MG1HUB33c0GR36uRuXXczwV/lQmbTeu5nwvW7PIZG1HP/Xqe
j7h3uq6e+7lAMPZEgGMD93PBYkOXO2cauJ8LHk774dnUwP1coC68st7pG/dz
QW6dvSDqG/dzxZr3J4fWfON+rvjNeOZ5y0bu54oHyQOS9zdyP1esS57kn93I
/VyhtE/l+bjv3M8V2pmK11Z8536ueG8FizvfuZ8rkiKiN7Z/536uWOE07ndh
E/dzxbTXUYLQJu7niuzaNwvfNHE/V/RZ6LZrUDP36/m+K36lazP3c0WF1QK1
Q83czxWOx+7GvW3mfq64WdD8W/8W7ueK20kiV/sW7ueK0pGPVu5o4X6uGCCa
vvFBC/dzxbW4+mWNLdzPDU29l7rqtHI/N+S9WKWxsJX7uWHLlhs/j7dyPzcc
tnz6/l0r93NDbcPI892t3M8NCsnqIQZt3M8N0f5WK5e0cT83bHwa6/NnG/dz
w8CL+za9bON+brDKH3y6qY37ueGrvNUX1R/czw2GS4eJpv7gfm4IC/X/sPUH
93PDBBv7nZd/cD83qFzDgswf3M8NA8K0V3Wyl+YG6+sx8Ro/uV/PvoG2mpKf
3K/nfPuwXP+f3M8N0tyBqad/cj93/Nqk2P3iJ/dzh6ehUkAle0ruuFflaSrT
zv3c8WbDKDuDdu7X833lvtOz2rmfOx7XvXcObOd+7uis7BZHtnM/dwQ6a59/
yJ6vO/SeOM7NZ2+TO5YHuvp1sBfiDo9FowuUOrifO7rmht226OB+7nixeFPD
3A7u545jVYeO+3dwP3dsqTp0+VgH93NHlZaK9g32ev5BP7i0XDGVvTx3vD6w
MbiCPak7vuXP9BJ0cj93KGv1uzm6k/tJ8KbmV7BJJ/eTQOfg9TRJJ/eTwGfV
6lO+ndxPglD9qJpg9owl8Ejd+fwke5DAKNFnzA323CWIUdwjSGFvngS9cmU2
FLDnK4F7lt667+xtkuBqa1dX/y7uJ4Gtzyll5S7uJ8G4E3IZBl3cTwKRv5+S
Yxf3k+DtrjMdnl3cTwLPxvMBq9lLkiA/2e/ITvbSJFhenYUI9vIkCF/w7PhF
9qQS/GsjOHSfvWYJgqqXqb9lTzAVzkr3Fub13P8PLUDHfQ==
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0.04978706836786384},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"P(X>x)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"x\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Survival Function\"", 24, StripOnInput -> False], 
           TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0., 60.}, {0.04978706836786384, 0.999615370682286}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {307.2, -569.5801240319031}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
      GraphicsBox[{
        {RGBColor[0, 1, 0]}, 
        {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
s4HWgkC+8+Gfyc8GQRWTHw6rz+Rng5dPvw/a/fxEfjbozOfQ2Ln/E/nZILI/
druR8Cfys4WZb+dA4Okh8rNFbn7KKl6dIfKzRW/XWy6likHys0WxoMzFc56D
5GeLnJv8WnEdA+RnC6U1wqrd2wbIzxY1CT2OaTMHyM8WiUfPGBSe+Uh+toj8
XJIx2+oj+dmi50JOekfjB/Kzw7WJ/hffNn4gPzukKjenr+D7QH52KJ/ZOsyf
009+dohYub2Tx7Wf/Oyw+4hPsnPve/Kzw4n40oib/7wnPzuYZP9K2qvznvzs
0C/0aTjs0Tvys4PmX/vmp4e9Iz87HKoP1+aQfUd+9rApDc07VttHfvawXhm/
C+v7yM8e+ap7DqhJ9JGfPYTq1KV0qnvJzx4nDwgFLNjQS3726LN/7HFappf8
7LFChNnx804P+dlj9zeD02E7esjPHqsOzJvFqdlDfvbQ2N9173xbN/k5QDv1
u5/vsW7yc8CdlrZKacdu8nPA+XertFuG35KfA2a8TFmXeeEt+TmgdmWB8JaV
b8nPAe5NttstZd6SnwOWL0y1HX/yhvwcMEt+rORq9Bvyc8CigUr+MJc35OcA
qYnYLAWON+TniKvHXn4oq+oiP0cYx3E1s3Z1kZ8jxjUy8susu8jPEbtc+w8b
f35Nfo4IYii+uL71Nfk54niZxmmxr53k54gW3ZxBpYhO8nPE7heu+q2/OsjP
EfEFmaywQx3kN8lrFT8TJ9xBfgwY+irI+6e8Ij8G7J5qHu9Rf0V+DKz9FNim
UdpOfgyc2rh31iNmO/kxkJwsnGfb8pL8Juf7/rigEPKS/BiY222onTH+gvwY
GEJqVUn8C/JjgKvlh6mPzgvyY2Dxof2R/reekx+QmloTddfv+dR4IUD+r8SM
lpE28gWs8lLtmCfbpuZrAnGF+9evt2gjf+C1ss7hI63PGITDHbeftm4Rz2g9
gISu2LJQuWdTPF9A6IG4W2x1K60P6MkbE98Q1DrFCwd27eTa4ynYSusFquwW
CX8tbZnixQBSNfZF6/1baP3Anlrdlxv5WqZ4OYBj4RNWb1kz9QDWDGRdPbe6
eYpXCyhZnFpXKdpMfSb99i2c+bG2aYr3AghNPao3sK2JegHCucfOh6g3TfG+
YvK8oF6a0/aU+jlhG7cZSyXmKfVzwo361aylzKfUzwn9Pwu3DYw0Uj8n/LZU
sa4pbqR+TpgImdkpuKGR+jlh8/llPHrqjdTPCYIyY19sqp9QPyfEW414brN8
Qv2coH1vSH9hyWPq54Qx0Ub3IMPH1M8JFs3mRtyXHlE/J5i6T/DbGj6ifk5Q
spIs4StuoH5OGDQvKOG1aKB+Ttg7+qEQlQ+pnxO8D/XH9zAfUj8nXO+Jkeh5
9ID6OWFe06Ibrb4PqJ8TpBZdLlj5rp76OeFwwbpQw4h66sfErt8fTObx1VM/
JpyVHBU3pt2nfkz4zSzoqDW6T/2YsPg383nqnXvUj4mlb/fIRvnfo35MyLU1
XtEZvUv9mGDtKN+0LvEu9WPidXRd9S/Du9SPCTW/A3diHt2hfkxcWxfV83vz
HerHxDf/l+kGIneoHxPW+slC0iW3qR8TQ7fHQ/iX3qZ+TPx0Hvg8+ruO+jER
h6/uTdl11I+J99Z+QufYddSPibw1vFx+I7eoHxMHxcJzZbNvUT8mluyNvdY4
7xb1Y4Jzj6V1+5+b1M8ZNR8c+60v3aR+znCRcwmyDLhJ/ZzB1Io10xe9Sf2c
8TX0w1//3a6lfs4Q7tbsfxFZS/2ccV9MfvVrvVrq5wyd1hlFOQ011M8Zp87a
Ct+xraF+zljKdrs0VFxN/ZwxW3L/WxHVaurnDNlVIYvz025QP2eUXPb9nSBz
g/o5I69HQ6Y0ror6OcPYzPDnCpkq6ucM/Q+NSx7FVlI/ZxQ5phd5SVdSP2cE
dTxc7HnyOvVzRqd4mdwshevUzxnyicu+/M6qoH7OsOBeu+q1XgX1c4HmgOZD
duU16ueCgLd1ORe9r1E/F+BzgUds81Xq54K/O9NFBtddpX4uuGY8ctBo7Ar1
c0HO00YutdQr1M8Fpje/m5sZXqF+LkiZ/U7Yv66c+rnApmT33heryqmfC/r8
GI7WHOXUzwWvuH77x54po34uWCyY0mVqV0b9XHBvjNMkoquU+rnA68/JQ15H
SqmfC2IL2W4LZUqpnwsymQUSrnUl1M8F2U8T2zt2llC/yfEH9s4RFC6hfi5w
Lm/K2V9/mfq5YL+a2HbNyMvUzxXtgeFt8nqXqZ8rZu09U5T+sJj6ueJ6V8Sa
K+HF1M8VRfIii7X1iqmfK0IH/X/X5RZRP1dEqc3PTEER9XPFm/DImNUFhdRv
kreudEM3byH1c8WJFeMZ3gcuUT9XDLxPUDWUuET9XHFxq2J0wM4C6ueKfyeU
eVY+yKd+rlhv3ZR3cVk+9XPF4o8T7R+fXaR+rviUsWaua+BF6ueK5z6r5OJf
5lE/Vxgm9+cdWJpH/Vyx+sNmy7TZedTPFUaVqn9z2Fygfq44HFS0Z1joAvVz
Q3Yr/5qIc7nUzw2Ld2adCBbKpX5u+OPrkBZ3Kof6uUHi2zzlJLMc6ueG0IxZ
FsdyzlM/NySnhhe1K5ynfm54WW3deN32PPVzw4vn/CKvcrKpnxv85VtVeEyy
qZ8bJA/qBv7OyqJ+bqguF88Rf55F/dwg9cy+71nnOernhvDQBD6+++eonxv0
Gz2EzvCfo35uOKWVfV//Wyb1c8P2dMavvruZ1M8N5V+bnypJZFI/N7xzfWUR
gkzq54ZFJqXLNzSfpX5ueB5mL7vswlnq545zrwefp6w7S/3ccWmk7aLLwrPU
zx3Jcvtr94pmUD93cF0VGP04K4P6uePJtjdZu7edoX7u4N/KuUanLZ36uaOh
OUpe4tJ/1M8d8wMCTfPX/Ef93JGlExVwqzmN+rnj3fu5FvLS/1E/d8RzWB6v
PJJG/dyheZrdWVtxmvq5o0O7T+nvstPUzx0jGS2Czw1SqZ87fhQI//xX4zT1
c0fsCaVHCztTqZ87Liqbm97bkEL93BEW09zWEpRC/dyxUHpkT+GOU9TPHV+W
/X1/1cIU6sdCfpbvR1v5k9SPBU3XnxVlh05SPxZ2nFFXr393kvqxMJAfeU17
fRL1YyHaPJ63Y8ZJ6sfCzr+VWuasIJ43a/I8rPXim3oy9WNhwcbMqvJdydSP
Bf+S3bpaw4nUjwWD+6+rVxgnUj8WvPmUY3vOJ1M/FlbLBhlzGCRRPxaKQx0l
r99NpH4s9Ikfs/k+6yT1YyEx+/IM9Yxk6sdC41GJtGgT4jWwMGQS2bDobDz1
m+Rd3O9SN5ZE/ViIV4v0eF+TQP1YmFeYIaavnUT9PKDbfmzLxM1E6ueBs3w/
5sdJE0/WA5xZHLtez42nfh5I3pzpkF1K6zXzwI4Thv1zHBKonwf+VUkaEl4e
T/088C5W+zb/P8Tz9UClQLxZp1EC9fPA9uQV9z0a6HmEe8CY21Ro3l/x1M8D
29RYMofHyS/GAwbKLRauV05QPw9o3Fcp3+QUS/08kORfeZD3KvmVeqCz6ZqP
dRj51XpgIrTsu/KXBOrngcXV4feZsvR8X0z2GDZMqeOl59HngSs86e4cjcep
nwdkR1P6Hpsdp36e0D+4f1tsCfGEPGFZszblQUMc9fPETc/9rMyIOOrnievM
lYaP0+KpnyeeZMevMEyk5wtPRPyxetJTRev19oTP8vN3RH9O9/OEzrx9EX/S
6HkEe2K4an37uZP0fMM9ofw750rS4enPnycOPtdzz1Cd7ueJX6PtdSmcx6nf
5P2DD+3O8DhF/TxRp9tjmNg8/fnzRO/ITu2G6/T3VuuJ3Zt1d251SKF+nnC+
/iZqsVwC9fNEQKCj8sv0Y9TPE8UZSxP2O/9H/Txhe5t3yaWEVOrnhc8T3Juj
u5Oon9fkfqP+dPcm4sl6IUta876lDL1fNL2wevB5/7cEer+YeaH7c5B06gC9
r+CFPXx78xV2nqZ+XtAXCQhjPkijfl5YYbetfl9oKvXzwgzVlC1DavR+CffC
siXpPcMhGdTPCwq7+6NYDHo/x3ghucMllqGRSv28UC7CI3MjMZ36eeFXsU3k
oZjpfl54vzfixhEmrbfWC4G3jBnlPNP7hxekOFmLR12m339e2MpVFV3WSPtb
nxfeJs9u33Z3ev+dXN+urC0B6rQfcXgjS27+8KDZOernjeU9nHMutNF+JOuN
c7/l9jV2Tu+/3tDTL+a+di+L+nnDXERss+Po9P7rDcXl7a+6l9D72dsbRdb2
/VufXaB+3sj9qeh3V4D2t2BvZJy9J8APOm+Ee2N/Bvefw1fOUT9v3OSoGo22
pvNGjDf4AmcbFY2RX6o3PmSpv1ppd4H6eSP4aKhXp20h9fOGWH2gU8PBfOo3
yVs04P2PIp2vJv9BD1XxkjKJLKB+3rjFbTVbq+8S9fOGn/yzDxuW51M/b/gf
H7fwzi6kfmzwO97rOdJPPCE2duxMDQs5MX3+Y+PUihxuA346T2qyER12eYtv
UxH1Y+PamVioLqLzJNgITpC/3qVaTP3Y4OQ6LiE2j85DvmyInDmTnfD1MvVj
o+3EkEBiCp1Pw9mI23F6n/7qMuo3Of77ntK12+i8G8NG8YDYSFxyKfVjg/fJ
yihP0+nzMxtfxxqvndKm830pG1dEM9pNS+l8X8tGkSf3sEJkKfVjI2C49t5G
KeK9YIMt6hVUKVBG/dhQX2v18EcC8b6yUdDJ8fH8Pzeo31zU+3e7mgWVM/4H
nFWiGw==
          "]], {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0.012996391400335646`},
       Frame->True,
       FrameLabel->{{
          FormBox[
           StyleBox["\"\[CapitalPi](c)\"", 24, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"c\"", 24, StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"Usual Stop Loss Premium\"", 24, StripOnInput -> False],
            TraditionalForm]}},
       ImageSize->Large,
       LabelStyle->Directive[
         GrayLevel[0], 24],
       Method->{"MessagesHead" -> DiscretePlot},
       PlotRange->{{0., 60.}, {0.012996391400335646`, 15.}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}], {921.5999999999999, -569.5801240319031}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}}, {}},
  ContentSelectable->True,
  ImageSize->{1240.8, 771.4401653758707},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.638629800242457*^9, 3.63863001227179*^9, 
  3.6389494805843477`*^9, 3.6389495228800573`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Stop", " ", "Loss", " ", "Premium", " ", "par", " ", "simulations"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NObs", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SamplePoisson", "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"PoissonDistribution", "[", "\[Lambda]", "]"}], ",", "NObs"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SampleCompoundPoissonUniform", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}], ",", 
          RowBox[{"SamplePoisson", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NObs", ",", "1"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Retention", ",", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"SampleCompoundPoissonUniform", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "Retention"}], ",", "0"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NObs", ",", "1"}], "}"}]}], "]"}], 
        "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{"UsualStopLossCompoundPoissonUniformPolynomial", "/.", 
         RowBox[{"c", "\[Rule]", "Retention"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{"UsualStopLossCompoundPoissonUniformPolynomial", "/.", 
              RowBox[{"c", "\[Rule]", "Retention"}]}], "]"}], "-", 
            RowBox[{"Mean", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"SampleCompoundPoissonUniform", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "-", "Retention"}], ",", 
                 "0"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "NObs", ",", "1"}], "}"}]}], 
              "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"Mean", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"SampleCompoundPoissonUniform", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", "Retention"}], ",", 
               "0"}], "]"}], "  ", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "NObs", ",", "1"}], "}"}]}], "]"}], 
           "]"}]}], ")"}], "*", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Retention", ",", "0", ",", "umax", ",", 
       RowBox[{"umax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638949600720364*^9, 3.638949622406098*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccc}
 0 & 14.9853 & 15. & 0.0980556 \\\\
 6 & 9.64871 & 9.66179 & 0.135476 \\\\
 12 & 5.50303 & 5.51476 & 0.213109 \\\\
 18 & 2.78782 & 2.79742 & 0.344321 \\\\
 24 & 1.26726 & 1.27289 & 0.444929 \\\\
 30 & 0.520103 & 0.523035 & 0.563808 \\\\
 36 & 0.194318 & 0.195566 & 0.642539 \\\\
 42 & 0.0661649 & 0.067064 & 1.3589 \\\\
 48 & 0.020686 & 0.0215882 & 4.36139 \\\\
 54 & 0.00594759 & 0.0203992 & 242.983 \\\\
 60 & 0.00162014 & 0.0835602 & 5057.6 \\\\
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.638949628333972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Variance", "[", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"aU", ",", "bU"}], "}"}], "]"}], "]"}], "/", 
  RowBox[{"Mean", "[", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"aU", ",", "bU"}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"UniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"aU", ",", "bU"}], "}"}], "]"}], "]"}], "^", 
   RowBox[{"(", "2", ")"}]}], "/", 
  RowBox[{"Variance", "[", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"aU", ",", "bU"}], "}"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.638969101815918*^9, 3.638969179484663*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "aU"}], "+", "bU"}], ")"}], "2"], 
  RowBox[{"6", " ", 
   RowBox[{"(", 
    RowBox[{"aU", "+", "bU"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.638969129016328*^9, 3.638969180074806*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"aU", "+", "bU"}], ")"}], "2"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "aU"}], "+", "bU"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.638969129016328*^9, 3.638969180076688*^9}}]
}, Open  ]]
},
WindowSize->{832, 855},
WindowMargins->{{Automatic, -59}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 26313, 695, 1627, "Input"],
Cell[26895, 719, 1099, 27, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28031, 751, 4220, 100, 250, "Input"],
Cell[32254, 853, 1181, 19, 48, "Output"],
Cell[33438, 874, 1157, 18, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34632, 897, 4126, 97, 216, "Input"],
Cell[38761, 996, 11700, 183, 81, "Output"]
}, Open  ]],
Cell[50476, 1182, 94, 1, 28, "Input"],
Cell[50573, 1185, 551, 14, 46, "Input"],
Cell[51127, 1201, 1187, 27, 97, "Input"],
Cell[CellGroupData[{
Cell[52339, 1232, 2143, 49, 233, "Input"],
Cell[54485, 1283, 112, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54634, 1289, 9010, 200, 675, "Input"],
Cell[63647, 1491, 38890, 684, 786, "Output"]
}, Open  ]],
Cell[102552, 2178, 166, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[102743, 2184, 2059, 49, 165, "Input"],
Cell[104805, 2235, 1142, 26, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105984, 2266, 5077, 124, 437, "Input"],
Cell[111064, 2392, 993, 23, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112094, 2420, 6543, 151, 471, "Input"],
Cell[118640, 2573, 29239, 517, 786, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147916, 3095, 1617, 37, 148, "Input"],
Cell[149536, 3134, 752, 18, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150325, 3157, 4112, 98, 318, "Input"],
Cell[154440, 3257, 562, 17, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155039, 3279, 6891, 160, 488, "Input"],
Cell[161933, 3441, 37941, 667, 786, "Output"]
}, Open  ]],
Cell[199889, 4111, 1038, 29, 114, "Input"],
Cell[CellGroupData[{
Cell[200952, 4144, 2260, 57, 165, "Input"],
Cell[203215, 4203, 567, 17, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203819, 4225, 754, 22, 46, "Input"],
Cell[204576, 4249, 284, 9, 51, "Output"],
Cell[204863, 4260, 311, 10, 87, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
